{"_id":"win-ca","_rev":"45-53e7d4b6c1ba98a102ef4c28a834de41","name":"win-ca","description":"Get Windows System Root certificates","dist-tags":{"latest":"3.5.1","both":"2.0.0-rc2","electron":"2.1.1-electron","beta":"3.0.0-beta","utf8":"3.3.0-beta.1"},"versions":{"0.1.0":{"name":"win-ca","version":"0.1.0","description":"Get Windows System Root certificates","repository":{"type":"git","url":"git+https://ukoloff@github.com/ukoloff/win-ca.git"},"keywords":["ssl","tls","ca","root","windows"],"author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"license":"ISC","bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"homepage":"https://github.com/ukoloff/win-ca","optionalDependencies":{"win-ca-ffi":"0.1.0"},"dependencies":{"win-ca-ffi":"0.1.0"},"_id":"win-ca@0.1.0","scripts":{},"_shasum":"a10dc0b635317f9ad51226bcd3c7dee25e6a7672","_from":".","_npmVersion":"3.10.8","_nodeVersion":"4.6.0","_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"dist":{"shasum":"a10dc0b635317f9ad51226bcd3c7dee25e6a7672","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-0.1.0.tgz","integrity":"sha512-VxBURnGSfiZ8ysGDFNootcUmEiT9vnlWJqel+Ip8ZYs4G3YMZrIaMGgYKyvmyHiwzAxob1bOZHtI+3yWzFx+gQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCVQecaiuo7qzMOCKcEEX5YSzFCARQAX9GT1Y9s+f6R+wIgJ8p2PMbiL+KSweXvVuUx+uh09wAMVGyBye+sg1rry5U="}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/win-ca-0.1.0.tgz_1483258014677_0.175134930992499"},"directories":{}},"0.1.1":{"name":"win-ca","version":"0.1.1","description":"Get Windows System Root certificates","repository":{"type":"git","url":"git+https://ukoloff@github.com/ukoloff/win-ca.git"},"keywords":["ssl","tls","ca","root","windows"],"author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"license":"ISC","bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"homepage":"https://github.com/ukoloff/win-ca","optionalDependencies":{"win-ca-ffi":"0.1.1"},"dependencies":{"win-ca-ffi":"0.1.1"},"_id":"win-ca@0.1.1","scripts":{},"_shasum":"0b0282e294048dd597e1450e566b4b1571e3bc97","_from":".","_npmVersion":"3.10.8","_nodeVersion":"4.6.0","_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"dist":{"shasum":"0b0282e294048dd597e1450e566b4b1571e3bc97","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-0.1.1.tgz","integrity":"sha512-UZAPtgiqbKWa/vYaU0MHmov2m4nvmBt3p/1ZHqvhvDAG36PnuBxcRykXe8CZy8DxE5GoHdMbm359N3U1N9+Nlg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC/uDh7/5XVzBaTqtg/NkyWpbXT8cTj7BukGHRHHx9vegIhAPbibXqiCytt44eDZseK4aJa9SKvm5LjhBEOSnPIErjG"}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/win-ca-0.1.1.tgz_1483264625418_0.06964705162681639"},"directories":{}},"0.2.0":{"name":"win-ca","version":"0.2.0","description":"Get Windows System Root certificates","repository":{"type":"git","url":"git+https://ukoloff@github.com/ukoloff/win-ca.git"},"keywords":["ssl","tls","ca","root","windows"],"author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"license":"ISC","bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"homepage":"https://github.com/ukoloff/win-ca","optionalDependencies":{"win-ca-ffi":"0.2.0"},"dependencies":{"win-ca-ffi":"0.2.0"},"_id":"win-ca@0.2.0","scripts":{},"_shasum":"84626dfd13f94a42b0925e3c302cc0cc27475018","_from":".","_npmVersion":"3.10.8","_nodeVersion":"4.6.0","_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"dist":{"shasum":"84626dfd13f94a42b0925e3c302cc0cc27475018","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-0.2.0.tgz","integrity":"sha512-qIZhQWIM/ak/frdHEaBH2MTr8XO5U5mycAx/FC4cRr59Rbp2CGFwXsVhh84P7B+1K1boY4bEsHI6AwxWgF97fw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCICLF3G+HY9ZDJoUY69QObTwCQ5h/mCR72Eov9pkpufXRAiEAkrfZk0fHJHLSNRNH9LjCfOcxMU1NpK3YwMpkRiasAeE="}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/win-ca-0.2.0.tgz_1483337565336_0.6806356753222644"},"directories":{}},"1.0.0":{"name":"win-ca","version":"1.0.0","description":"Get Windows System Root certificates","repository":{"type":"git","url":"git+https://ukoloff@github.com/ukoloff/win-ca.git"},"keywords":["ssl","tls","ca","root","windows"],"author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"license":"ISC","bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"homepage":"https://github.com/ukoloff/win-ca","optionalDependencies":{"win-ca-ffi":"1.0.0"},"dependencies":{"win-ca-ffi":"1.0.0"},"_id":"win-ca@1.0.0","scripts":{},"_shasum":"7b0d1cd722712f10bf158f5d994aa39507af5932","_from":".","_npmVersion":"3.10.8","_nodeVersion":"4.6.0","_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"dist":{"shasum":"7b0d1cd722712f10bf158f5d994aa39507af5932","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-1.0.0.tgz","integrity":"sha512-15AhdM0DneOO6PyorDIShCEOnZbOkCqdip1QWowL2Kr7fTnrb75N7jps6tZJhFOF5cbjQmHkUEboszrP6HYT9Q==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD9h7ZSSUk56BAqdzGEZdN57zmBujwQUrRPKPRbtfAMDgIgAoMBEf7pa1F9K1ZnHI4jtxFH4KoS8iOB3NR1E2Rg0MQ="}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/win-ca-1.0.0.tgz_1483426043611_0.900206709979102"},"directories":{}},"1.1.0":{"name":"win-ca","version":"1.1.0","description":"Get Windows System Root certificates","repository":{"type":"git","url":"git+https://ukoloff@github.com/ukoloff/win-ca.git"},"keywords":["ssl","tls","ca","root","windows"],"author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"license":"ISC","bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"homepage":"https://github.com/ukoloff/win-ca","optionalDependencies":{"win-ca-ffi":"1.1.0"},"dependencies":{"win-ca-ffi":"1.1.0"},"_id":"win-ca@1.1.0","_npmVersion":"5.6.0","_nodeVersion":"8.11.2","_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"dist":{"integrity":"sha512-Ok9C9ZABMjz30LWRFwHLljR4h8++t80xUMdEDDINywEHrJyQ+U+SCE/Ex5WIuoBHPKKEEh6gzEofyK+MxiC1kA==","shasum":"9649fb51714350b5fc0e18d4aa23d0a3c702a7c0","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-1.1.0.tgz","fileCount":3,"unpackedSize":4110,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbFkPkCRA9TVsSAnZWagAAi/MQAKOMGb+5TxwvTdRxRyX9\nvRtZcW5O4jqBdd4hmPbMNtAe3c7akSJ1dMNsHb2UIRg0Sm69639p88tlCOin\noCcLkPQ9vPegmvh4seHqDrDD6MbWHbw0J9cd6xsWuAQ9kuYpe6WWoYYgXKJs\nBijbGCLhVN11gPYBQmCkFcmnFt5EWDrHxw8os4T5mHRjtzjcah5TkZAq9bs0\n8X8MCwIC3MPrO5HrTNyqyPAQZINLdM4WJjf0MmtyKX3Qeq0pWY82q4BgZEGx\nK+K8myP86JV+IYJOEF/jB3rmXvrXlO35rZmApniJTL9M/99nRDQwEo5LpKai\nCcuJMiX5/Uw9a1I7D0dx3GUjr20wFquv8sJbJ/s6KZep/2eBqPFU72E2Hdt3\nEV8jM58hGHSGDDD54hmpkVDBAL9ReZEhRQKJPSu1lnV4XlPQJeEOJAquZlm7\nwflYdvc93r1zfh+ruzU+6BuMu5dIb6TAeiqzPOAX3ytHamYDnjcF4GMIG+iV\nxIQkxcEw1KIdABN3pk9fXb17a+fSgviUpJMgUYoI0AwirM8CNJaIeqfxCqaY\nCVI3aArOSi/raKEILx0JXMbOh+2y+Ke5ANAC1aE9AuuI1DTYjiS/kh8Y9pMz\n5h4v4RuVjT0hkL0PeByyCaBktROz+dEgOSvkygg7SWu5QRP8e75yoOJfJ7lj\nWVyA\r\n=7mgz\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDXkd8JrpmJpd97ChCIORZFu9OELsPdWvvtgJdXXIN3QAiBQxR6DG5+3QI9GxuoJrR54Crj1pqv742I3cA0YsogLTw=="}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_1.1.0_1528185827887_0.1414165943459138"},"_hasShrinkwrap":false},"2.0.0-rc1":{"name":"win-ca","version":"2.0.0-rc1","description":"Get Windows System Root certificates","main":"lib","engines":{"node":"^6 || >=8"},"files":["lib"],"scripts":{"nvm$":"n-api\\nvm$deploy","pretest":"coffee build","postinstall":"node -e \"try{require('.')}catch(e){}\"","test":"coffee test"},"repository":{"type":"git","url":"git+https://ukoloff@github.com/ukoloff/win-ca.git"},"keywords":["n-api","ssl","tls","ca","root","windows"],"author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"license":"ISC","bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"homepage":"https://github.com/ukoloff/win-ca","dependencies":{"node-forge":"^0.6.45"},"devDependencies":{"bindings":"^1.3.0","coffee-script":"^1.12.2","node-addon-api":"^1.3.0"},"gitHead":"a1b07f70137de5469c6ee36eaf38dc7193c3d9b3","_id":"win-ca@2.0.0-rc1","_npmVersion":"5.6.0","_nodeVersion":"8.11.2","_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"dist":{"integrity":"sha512-Lc2otFKa1YIToxHAgJtZ5Q1ey23YTpt8CuRtwKYEA/2wspqpto32WLe4WUuHiX94+roOOO/hbZotv6POluq54g==","shasum":"8c66999bad350b37dc5200b612d0267eae03c198","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-2.0.0-rc1.tgz","fileCount":18,"unpackedSize":200821,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbG4h4CRA9TVsSAnZWagAAy/sP/1ul+VOK85CdpMRo1lRB\nsPy2CFk/fdv4YIwsSVjPdva+M66s6nyJIE+QkpiCT0XcoJJkJcZKoAa0MVfm\nQFdGunOSxk5xuXz9RzFjFFWa9dcHqyukr8VudBevUHgCO5IqDIMapTGgyqwY\n7qkVfGfOvdrlgPDTpYgjEygx33uOAffP6vix3oUoeJa35rm+wZk4RjHN2D4a\n/HAz5rnEIV7c/1VNHXs04Jm2vvN+HMDFzETkfhU385RxEyArP8wk7PHeIEgn\nmnGSPfnUnabOMQ9mun8PApycUNlK3Nqs5W3UXcrKIj4zTBxcwQp34kR5bj7K\nDTYOF2bL7iR2ihctOrdIl+BknAQ0MNLWR5dlLB4/QHsG8zVLn3+ZEUO4eWsw\nxHRanWS8buJ0MkJjuT5u+gMg9Ogr8joueBPS8zt4w8kwJdG6cx5zUInSDyPw\n4EO/2Jgg0w5LYTLpK1z2lRm96HmIhteAlY7y3JSP4NIkF0r25lfk/9KD+2u5\n9JjO/2Oc6pbR0VS65yy1UGz+u2MRLYVtw8u5HKkdf+oHTVpPzA3WoxJzGC8C\n4gJdm0dUWK/G7gKyp2QeCb46xn9+vrRBvaw4JSFNAMBgLePGtE3YpBo9K6hr\n1c5qi1Nn5WMLv+uiaSr0U45N+yBTp0THGZRQTlwJdN5Ql+/m9Z4JWJ+wklIu\n+faz\r\n=6a7F\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAx7F7U/MEScVRAOyAiPBVScMb0k3ly6XlBJHSmLjsGyAiBWRQpMTXUPcLfmnlxF4kUUGW61NVSaODALOkRS7hoKtQ=="}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_2.0.0-rc1_1528531063650_0.288754387040675"},"_hasShrinkwrap":false},"2.0.0-rc2":{"name":"win-ca","version":"2.0.0-rc2","description":"Get Windows System Root certificates","main":"lib","files":["lib"],"scripts":{"nvm$":"n-api\\nvm$deploy","pretest":"coffee build","postinstall":"node -e \"try{require('.')}catch(e){}\"","test":"coffee test"},"repository":{"type":"git","url":"git+https://ukoloff@github.com/ukoloff/win-ca.git"},"keywords":["n-api","ssl","tls","ca","root","windows"],"author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"license":"ISC","bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"homepage":"https://github.com/ukoloff/win-ca","dependencies":{"node-forge":"^0.6.45","split":"^1.0.1"},"devDependencies":{"bindings":"^1.3.0","coffee-script":"^1.12.2","node-addon-api":"^1.3.0"},"gitHead":"b7727aa2a01a92dbdb7a641be54ef342c148152c","_id":"win-ca@2.0.0-rc2","_npmVersion":"5.6.0","_nodeVersion":"8.11.3","_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"dist":{"integrity":"sha512-d+x2Xo/O+0e85IOTDWtuLXdPwrx3VqdHh3wkwkMXd1PmIFRSADwOYpHBYcWEhB91nJXXbAAzigT9/HyqeZbkLQ==","shasum":"d7235f71bf458a4bbd8954e1b7bb984b4ec94e30","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-2.0.0-rc2.tgz","fileCount":22,"unpackedSize":281192,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbIlYcCRA9TVsSAnZWagAAo04QAJBjT9ayyELww+ZTlZQR\niJKZsvK38VCZU3mr3RVmKfdpBga3wEo1HKdic5+bXZNkWwJpdss/YNa1eZsz\nM6E5sfsyyZmtx6k3BfAX+Oi96mbyPTZbctOsMHJ/C73wzO73hDcgp+QFlFy4\nYiwFVK591Pl3naA9o5CVVJ0R8KjpORjPwVL0LZ0UrpJiNOTqvvouCZV1+sYR\ngz4SHMNTNPkkWmLrmVHunDhJM1m3dpbMP+RJ6DlsfTjBd8ZVPbgh8xzweIOI\nyd63G+OIR5rnzqpCdzI1ML3QwTEO0nDlE5GukGfE0UZ6qhZVWiKd6OOqXIw9\nM11uHbpkTGLco+F4eKB5YLK0SfRIIXGZXdmHFJAgWBHbJ5F+Sd3/+RkBjMGx\nxCcwVRdQVw6/JWzqicuLB+AKqjxwUjTradXgxKS4tUbNenibIsVZDU5gSSrv\nb0TEizN4+telaLlRtvzTgwiI+atWSpfAOCQs7Qz8kdQySeApNu87CIai/RPt\npHbAMe+TYf/2cF/HzIJrge4cQHFkIq+vZDSrXPgHRjV/JUINfJxBbZPOFrrv\nClkX6CkKa3giKAK0m1aAxRGukmEnzd2NjwZxwu45AVQSZhrKN83CE4oJmNuI\ntntgNgwag3kpInM289F6r+gvUT4qdHv87bvYD8WTf080dpPTjdqSf5CwmjMh\ndykS\r\n=15xB\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFULUNUdNBy1m+7gcGogDOM7YcM++9X/gxvmB2WfP+Y9AiBY5fWVC78OuZm9A+eQbM5yjUMxMcYZzgvu/ImE/SvjZA=="}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_2.0.0-rc2_1528976922718_0.687716069099702"},"_hasShrinkwrap":false},"2.0.0":{"name":"win-ca","version":"2.0.0","description":"Get Windows System Root certificates","main":"lib","files":["lib"],"scripts":{"nvm$":"n-api\\nvm$deploy","pretest":"coffee build","postinstall":"node -e \"try{require('.')}catch(e){}\"","test":"coffee test"},"repository":{"type":"git","url":"git+https://ukoloff@github.com/ukoloff/win-ca.git"},"keywords":["n-api","ssl","tls","ca","root","windows"],"author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"license":"ISC","bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"homepage":"https://github.com/ukoloff/win-ca","dependencies":{"node-forge":"^0.6.45","split":"^1.0.1"},"devDependencies":{"bindings":"^1.3.0","coffee-script":"^1.12.2","node-addon-api":"^1.3.0"},"gitHead":"afa5cca94f89cee8db8ffbfc34537b257ab28d95","_id":"win-ca@2.0.0","_npmVersion":"5.6.0","_nodeVersion":"8.11.3","_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"dist":{"integrity":"sha512-EmNFZ8wq58T1cXMLitxV5Nqs9tzqaUapM3tdSfusltiqxYGTCfIXi1XJYrXKPD2CV1Rz4sG0CQRSANf2ptw3hg==","shasum":"61ddd353e36a0c81e8343ad2eba24983de2f08f0","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-2.0.0.tgz","fileCount":22,"unpackedSize":281402,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbJLl2CRA9TVsSAnZWagAAslsP/3MYfUIcHaToYcOdSb7D\nOM1gPnUZ4tUXhF7/8m5hCL/hPRTrmFTOGxl1UunZNX/IOTbkG/1b/G16Q3Uu\n/4vZSgfIoO+ItAEqt3HIv7K8UHRXxdt2/3AwbW5EwTGolSCod/05f/2WXyzq\n9YEjgnq5xRW68q8w3aki3jC0PrYqKPG0kWlJdS/j8CgVqZC71nu+NlogJHO7\nu9D+kk1iuhqQIuNCL+PXNz7FwVFKSlQ3VdrCwMTWQqgJxwMWlSsAZDP0hh90\n7fAOa7p0cScovzk8m8s1gTGAsFy2LELaF0Bl5wD443dKfhTWBVDdoWJaOOFB\ngYi1bqqcNA/0ysgcLNeFx/cqZc5hvr2gIMHKD6guIfreiFrfymDKsDEpBWTS\nr+BStRhhG7Q1VSJ2rxcKig8bT29Euc8JU9z/pX5XzV59xSr3DEGE+FLGKeHv\nIFdWKNSGFFfDWyDl4izG1JmCHt1U81h7DvG/aD6kPDo8KiLRO7F7Rugsj7A8\nSwHDCjeuxDuyYenWy8rQdomjUSVGHHI2mgPB68JKN+pEegBd7rTeUwqqlby6\nlsZ1KnuxuqX2VsInqBvLJ9RGH83Way3EDfdXvatJ8b/j3G5EnvpYB8vf96RP\nvdNuHIuwqbaCq75y/l/SlqP+FvFYhD1Cjnk58adb6Ldu7DzRqlhgvPg9ZLy9\nNLiK\r\n=mfze\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIAtL3ptph7dWelPjTHlrfanikiyreDxk9vZ/15cPjG1FAiA12G5unrWzt3Fu22p4DhxUnpjaIons1eSrD/AWPL90WA=="}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_2.0.0_1529133429274_0.22341662235297943"},"_hasShrinkwrap":false},"2.1.0":{"name":"win-ca","version":"2.1.0","description":"Get Windows System Root certificates","main":"lib","files":["lib"],"scripts":{"nvm$":"n-api\\nvm$deploy","pretest":"coffee build","postinstall":"node -e \"try{require('.')}catch(e){}\"","test":"coffee test"},"repository":{"type":"git","url":"git+https://ukoloff@github.com/ukoloff/win-ca.git"},"keywords":["n-api","ssl","tls","ca","root","windows"],"author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"license":"ISC","bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"homepage":"https://github.com/ukoloff/win-ca","dependencies":{"node-forge":"^0.7.5","split":"^1.0.1"},"devDependencies":{"bindings":"^1.3.0","coffee-script":"^1.12.2","node-addon-api":"^1.3.0"},"gitHead":"0b0d12da8c9868b103be936916a49b5aaab127ea","_id":"win-ca@2.1.0","_npmVersion":"5.6.0","_nodeVersion":"8.11.3","_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"dist":{"integrity":"sha512-r/HRUmPHrs9fZMM5Bc2Qt42P7boPhcvuarEMxDe8kuwarhxituMcrmINSjPtJHHPrUDha7e6FMG3E2dhy9iRbA==","shasum":"204d4839a330c2b72b990d26248cc8573e325cd1","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-2.1.0.tgz","fileCount":24,"unpackedSize":284593,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbMMjjCRA9TVsSAnZWagAATeAP/2xFC4oWdJwU9GVEvoWE\nFNTiJCYOjupDyliHVhhAtVOBk8eNFrwpfbcRV1wABlj2uwJuwByciRqF5GLM\nk14qT128aCc6EIUu5jgzzjZ9h+qLmUQZhlNLRyDkShHvislUrcGrNolchlVH\nV8AiFBy+AymjnNGOpAC5RNaE8KYQHAxXlom8KvC541MejuwD5coEQYtqsVxZ\nNEPnzmCuk/IpUEwIdIS8JZ4cOqj8JcCLsK6lL6hTTf2ncKQEkEpOPFaX+qSK\nWThJetrsARKyucmdjrfd1MtRz+FM9Q7zfo7aBcf4vMBlTaUVWjKX6o2swEgs\n5vfihgAqXM6jHXbfd58SYmiOggGlGsNYqW3Njpt7csubLnq7sbqaOEto+FaH\nbZiNuhh2oNXsCketN/FKupPos4QDONsNhgDVzqE0o9D/RzE+JPPIP294cIto\nwggNN8TTzqOBZ/h5VPkBmSJfY4jvtzgNHkt2TxTR/FKcEQ4V/aYO6F92vu07\njXTb2xNRoH/GcTSzWQVNzD6SliOFzY5jcs+svogDCgtRx8zUl2f0v75XXblF\n58YWvkef4ZrWIqxM7SbiARf+GuxHLGFDJTBiV3euhtPu2eMAdo7xyILa+9Wu\nLdmejvD3sr1ddCPlcqEybfvAxtfIr2kaGKE0+X+W+j3jYXcTw3XDJiowhW51\nZeMJ\r\n=GT2f\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCr+abgkwRKfKoDVGPnj68f/XcjDuI7Y7Y81MnKCbvSlgIgUYZtUNwwa8GJlhf6Uu8h+7IG0Oblve1JFJ1dmJs24hw="}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_2.1.0_1529923811329_0.7611563637052015"},"_hasShrinkwrap":false},"2.1.0-electron":{"name":"win-ca","version":"2.1.0-electron","description":"Get Windows System Root certificates","main":"lib","scripts":{"nvm$":"n-api\\nvm$deploy","pretest":"coffee build","postinstall":"node -e \"try{require('.')}catch(e){}\"","test":"coffee test"},"repository":{"type":"git","url":"git+https://ukoloff@github.com/ukoloff/win-ca.git"},"keywords":["n-api","ssl","tls","ca","root","windows"],"author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"license":"ISC","bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"homepage":"https://github.com/ukoloff/win-ca","dependencies":{"is-electron":"^2.2.0","node-forge":"^0.7.5","split":"^1.0.1"},"devDependencies":{"bindings":"^1.3.0","coffee-script":"^1.12.2","node-addon-api":"^1.3.0"},"gitHead":"d1cf584a9ac227b2502b2cc418637938219ccc2b","_id":"win-ca@2.1.0-electron","_npmVersion":"6.4.1","_nodeVersion":"10.10.0","_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"dist":{"integrity":"sha512-9wZcB+rNEmzHT8EjT9znB0TwSV93bnAmGicRjA8KimadXi2cKmE45VVpOYNJFtiCer7YNuqqSyQ/i2VMtBka8w==","shasum":"6baf613cbd29f088031d6a048f7043513b5873e6","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-2.1.0-electron.tgz","fileCount":20,"unpackedSize":282330,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb2pGBCRA9TVsSAnZWagAA5UwQAJ9qUl6W6KEk2dA/q2V/\nhSsJpD8Kv4d2owHPKLYw35jgXnSvePIRCwDsUgBXS0pdPhHVNyEBlvUJgGb/\nCx5F9cPJsHMcxLkFrRnmUGelO8QEoU7343wxDL8SwF87jPFoMXSwWBUtgmIm\nCFLfl5CHurW7R+DnJ0PZPpHdu8sMcsTYJPeolbmWpYm3EtAsBxlxznHG+gu0\n5z+aaHKeSOMQ/VHsjbFmkK9SWCk5Oh+Fb9kUsdMaom43IaF/miMyAEJqbzhC\nNgno2AJjJCDktc+2aN4U7PHcLK4borR2qqrOtMpbFVI542gh/hHHtDa9L4wa\nSdb+m7hLlMgkE4yo6QAn4GAo0KtabFGuW+OAseX3Dh99CuoY2F1KWyI7XLIb\nxiIZCC+b7PD2uAmzwgWFKr2y0COGOcPcsxd/2skpXARhiLWM6iVm/ZzvFMKk\nZe7FKBEy0M9E6e9FcAvnEN/pYNhbc42RaWaNeSTXGcRV47qZQnl9yYKk/av2\nrE8InRKTccqyTTMUJbb8hgZgNEWmRgJWi+YIdL/AFtV8w3EXle1S+d6ft7fG\nwrWw9YB4OqiLpqtZSRGNZScwV1U87/1eEaPqc504SgPHmUno882btEsvv2po\nkmVJ+CughnHrKrsLDleiZKv8mMjgKPIFD5zQbL0rkGuTma6E9g5MQiCEpI8V\npv86\r\n=3oVB\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCKqZe5wZCKSFWLLow7bo7SDZdA3P+jGP8cUVMhLQesTQIhANtN76fAYAIOcZfFdJXNg0+dsIsrR1mds0NRenzxuFNz"}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_2.1.0-electron_1541050752331_0.14571620910880823"},"_hasShrinkwrap":false},"2.1.1-electron":{"name":"win-ca","version":"2.1.1-electron","description":"Get Windows System Root certificates","main":"lib","scripts":{"nvm$":"n-api\\nvm$deploy","pretest":"coffee build","postinstall":"node -e \"try{require('.')}catch(e){}\"","test":"coffee test"},"repository":{"type":"git","url":"git+https://ukoloff@github.com/ukoloff/win-ca.git"},"keywords":["n-api","ssl","tls","ca","root","windows","vscode","electron"],"author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"license":"ISC","bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"homepage":"https://github.com/ukoloff/win-ca","dependencies":{"is-electron":"^2.2.0","node-forge":"^0.7.5","split":"^1.0.1"},"devDependencies":{"bindings":"^1.3.0","coffee-script":"^1.12.2","node-addon-api":"^1.3.0"},"gitHead":"b2eb4ee7fb1816a66c7861c44d53aa79d5c7cabb","_id":"win-ca@2.1.1-electron","_npmVersion":"5.8.0","_nodeVersion":"8.11.4","_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"dist":{"integrity":"sha512-w8ajKYbbXjPBTqe2GzDJerPJ3AUh3rvYawtbZK9yFqh13eZJY0H9jvNs1OfTmrM75QtC3qLlubcI4KTlDBRcBQ==","shasum":"3b883a0f19d2f09e45727f8ecdccd0f675f1cc8f","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-2.1.1-electron.tgz","fileCount":20,"unpackedSize":280796,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb2v6OCRA9TVsSAnZWagAAnYcP/Aigorb/jiUxI15r58En\nKLXGLPSe32KJ7qb5b7ZOOEeNjwkRPSsQGXaPERlcv3LzlhW2V9wYneDkOBug\nGuftTVpS3v15EDgQ5+2L3IR0b5yqLvYZF91ASBZ6tmHijb+a1j53tMe6smdz\nnVl6onMmdLyYZp3t6mB95we4139Gj7AZYxBdyVmSYBfBJpVOlbO05026Bh/J\nGe1Rc3WZqVsTiMd0XO3Efzlrumt6845PYU3CGG+eHmgC1oA9L8Oxa78ubGgv\nF2wy/EHzNTMpyZ0LiOaQwKRzASUNw6ffVxgN3U8FxtY7B/RsAZZ8g/POizd/\n8V+empujlq3b5G9MRLLTTSC2cq+HJ5iPi8ea69OJ9ZWtXAdrKDIeQ9wutxGJ\n7vjI7ONtzvOjchB74W+kcoecD4Gyet1zL2aWcHxmChkrLqA55OHEWQSOcusi\n0N8aDXWznI78zhGsYqZzBLSMrntzhvNSX3NdUVL+H+fiTe2LFNAAcflh/3Gw\nXYxcepIfn6fcCnQAaG9tPk+35HHagHJfFP2p4tQC9wLt7YGfHblCRlkGJEcO\nDnELcl3ZKt0DS+sYcy4ZLH25iMdVkkOv++4hyE2YCL503N9ZsGiX/gcb0VlN\nBlteQBjFaB2eZqkXPmosOKCmRnSJP0TpO8/JgZ3hOfciN1ZhSH6ipSrNVQZ6\n3JRR\r\n=lO3V\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDP8/DJsegebBUTUR/M2aCL2IvYFXEWtCWTgSs21+hgmwIgNT4xO1hjkzN9MP7ozFKpwqn8C7iEHxIFZpDxHi2kNtE="}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_2.1.1-electron_1541078669910_0.6958911288039005"},"_hasShrinkwrap":false},"2.2.0":{"name":"win-ca","version":"2.2.0","description":"Get Windows System Root certificates","main":"lib","scripts":{"nvm$":"n-api\\nvm$deploy","pretest":"coffee build","postinstall":"node -e \"try{require('.')}catch(e){}\"","test":"coffee test"},"repository":{"type":"git","url":"git+https://ukoloff@github.com/ukoloff/win-ca.git"},"keywords":["n-api","ssl","tls","ca","root","windows","vscode","electron"],"author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"license":"ISC","bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"homepage":"https://github.com/ukoloff/win-ca","dependencies":{"is-electron":"^2.2.0","node-forge":"^0.7.5","split":"^1.0.1"},"devDependencies":{"bindings":"^1.3.0","coffee-script":"^1.12.2","node-addon-api":"^1.3.0"},"gitHead":"f425d74bdadf029b816ac196e40abe71f08e9914","_id":"win-ca@2.2.0","_npmVersion":"5.8.0","_nodeVersion":"8.11.4","_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"dist":{"integrity":"sha512-oP3viL+YUMOr5nEL7S0bVQfSxhrutEXmHBjhk3Z1hJXoe3DuFeiDgy0ToLtkNjhYET/YcMfb5MJdQHqjku/A2A==","shasum":"496ce826ef29bff2b6bfdb9f02d7bc6e85a621c4","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-2.2.0.tgz","fileCount":20,"unpackedSize":280787,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb20VxCRA9TVsSAnZWagAAlckQAKTr4f3hZ1rBN8t0XaMX\nLrR0Yjul/hj7VhtCuOlLdCgrfT8V9jDlN9FSKZFnY3Ca4cuBGQsbNhxZGzqx\nx7y5wMJeD7XxSzl8MbyGOdibOiO4muiMGdYGfY5CjVLGmoDYY7ptZHqoXw8d\nZzGqHmuaulqpeIdlIYg2Y0TbHX4U4lWj3IAEJFX1SqU3RNNWhwGyhysqxe2N\nSrWy0NLdRRs5aHt/xnpHmDLNylhK9aUkwxP4xSF4JoRKtHF6LXW74VY0GHWx\nUI5LbqBi5g4di5VM/KxfehW9nT/1cpaGLhKUWuhjUULAL1jFH4e7JXhcFtXw\n/HptH+mSkSRCyZokqaEasRiyukNP82XtnDEv20CG/gpDRzKeDe2sDGIVyvgy\nfxXffP/rLyU86ILafMAv1h2mrMtniV7UtfOX7ucrPKciwBdjHDZCdVJcqh4I\nILdeFZ7q1XOXYIido3MeuDumum859n9D6ChkRBJaNJSRnUMYo3qB7Rq9K8x5\nwr7j+OS7FXVoJPQhC1Rxg+86/a4noSzEzezzTW9H+HmLkvLKrKpLjUCqpb6N\nxlSAF1e5puwSb4MS0nvBZDeHciw1eOM9SjqjO37b79sMlduFkY8GxfF6UXxq\ntBW8kXWEhph03nggyms1M7xft0LJ4oEFEF0qqXp11c83omx3aK6TwQ+7uRzT\nlH+Y\r\n=lxaY\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDTlZSuH+z1rCWQ3JZlAfHngsYtc6szdMmvnSNtpgFHDQIgLEDzbCQ289oxLAmLSTvXHO63VZnvo5M7ntFhNFqHzOM="}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_2.2.0_1541096817158_0.7994926211915978"},"_hasShrinkwrap":false},"2.3.0-beta":{"name":"win-ca","version":"2.3.0-beta","description":"Get Windows System Root certificates","main":"lib","scripts":{"nvm$":"n-api\\nvm$deploy","pretest":"coffee build","postinstall":"node -e \"try{require('.')}catch(e){}\"","test":"coffee test"},"repository":{"type":"git","url":"git+https://ukoloff@github.com/ukoloff/win-ca.git"},"keywords":["n-api","ssl","tls","ca","root","windows","vscode","electron"],"author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"license":"ISC","bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"homepage":"https://github.com/ukoloff/win-ca","dependencies":{"is-electron":"^2.2.0","make-dir":"^1.3.0","node-forge":"^0.7.5","split":"^1.0.1"},"devDependencies":{"bindings":"^1.3.0","coffee-script":"^1.12.2","node-addon-api":"^1.3.0"},"readme":"# win-ca\n\n[![Build status](https://ci.appveyor.com/api/projects/status/e6xhpp9d7aml95j2?svg=true)](https://ci.appveyor.com/project/ukoloff/win-ca)\n[![NPM version](https://badge.fury.io/js/win-ca.svg)](http://badge.fury.io/js/win-ca)\n\nGet Windows System Root certificates for [Node.js][].\n\n## Rationale\n\nUnlike [Ruby][], [Node.js][] on Windows **allows**\nHTTPS requests out-of-box.\nBut it is implemented in a rather bizzare way:\n\n> Node uses a\n> [statically compiled, manually updated, hardcoded list][node.pem]\n> of certificate authorities,\n> rather than relying on the system's trust store...\n> [Read more][node/4175]\n\nIt's very strange behavour under any OS,\nbut Windows differs from most of them\nby having its own trust store,\nfully incompatible with [OpenSSL].\n\nThis package is intended to\nfetch Root CAs from Windows' store\n(*Trusted Root Certification Authorities*)\nand make them available to\n[Node.js] application with minimal efforts.\n\n### Advantages\n\n- No internet access is required at all\n- Windows store is updated automatically (in most modern environments)\n- Manually installed Root certificates are used\n- Enterpise trusted certificates (GPO etc.) are made available too\n\n## Usage\n\nJust say `npm install --save win-ca`\nand then call `require('win-ca')`.\n\nIt is safe to use it under other OSes (not M$ Windows).\n\n## API\n\nAfter `require('win-ca')` Windows' Root CAs\nare found, deduplicated\nand installed to `https.globalAgent.options.ca`\nso they are automatically used for all\nrequests with Node.js' https module.\n\nFor use in other places, these certificates\nare also available via `.all()` method\n(in [node-forge][]'s format).\n\n```js\nlet ca = require('win-ca')\nlet forge = require('node-forge')\n\nfor (let crt of ca.all())\n  console.log(forge.pki.certificateToPem(crt))\n```\nUnfortunately, `node-forge` at the time of writing is unable to\nparse non-RSA certificates\n(namely, ECC certificates becoming more popular).\nIf your *Trusted Root Certification Authorities* store\ncontains modern certificates,\n`.all()` method will throw exception.\n\nTo fix this, one can pass `format` parameter to `.all` method:\n```js\nlet ca = require('win-ca')\n\nfor (let crt of ca.all(ca.der2.pem))\n  console.log(crt)\n```\nAvailable values for `format` are:\n\n| Constant | Value | Meaning\n|---|---:|---\nder2.der | 0 | DER-format (binary, Node's [Buffer][])\n|der2.pem | 1 | PEM-format (text, Base64-encoded)\n|der2.txt| 2 | PEM-format plus some info as text\n|der2.asn1| 3 | ASN.1-parsed certificate\n| * | * | Certificate in `node-forge` format (RSA only)\n\nOne can enumerate Root CAs himself using `.each()` method:\n\n```js\nlet ca = require('win-ca')\n\nca.each(crt=>\n  console.log(forge.pki.certificateToPem(crt)))\n```\n\nBut this list may contain duplicates.\n\nAsynchronous enumeration is provided via `.async()` method:\n\n```js\nlet ca = require('win-ca')\n\nca.each.async((error, crt)=> {\n  if (error) throw error;\n  if(crt)\n    console.log(forge.pki.certificateToPem(crt))\n  else\n    console.log(\"That's all folks!\")\n})\n```\n\nBoth `.each` and `.each.async` methods\naccept `format` as the first parameter.\n\nFinally, `win-ca` saves fetched ceritificates to disk\nfor use by other software.\nPath to folder containing all the certificates\nis available as `require('win-ca').path`.\nEnvironment variable `SSL_CERT_DIR`\nis set to point at it,\nso [OpenSSL][]-based software will use it automatically.\nThe layout of that folder mimics\nthat of [OpenSSL][]'s `c_rehash` utility.\n\nIn addition, file `roots.pem` is placed\nin the said folder.\nIt contains all root certificates in PEM format\nconcatenated together.\nIt can also be used by most cryptographic software.\nIn particular, `OpenSSL` will take it into account if one say\n```cmd\nset SSL_CERT_FILE = %SSL_CERT_DIR%\\roots.pem\n```\n\n## Availability\n\nCurrent version uses [N-API][],\nso it can be used in [Node.js versions with N-API support][N-API-support],\ni.e. v6 and all versions starting from v8.\n\nThanks to N-API, it is possible to precompile\nWindows DLL and save it to package,\nso no compilation is needed at installation time.\n\nFor other Node.js versions\n(v4, 5 or 7)\nspeciall fallback utility is called\nin the background to fetch the list anyway.\n\n## Electron\n\n[Electron][] uses its own N-API,\nso if it is detected,\nthe same fallback is used\nas for old Node.js.\n\n## VSCode extension\n\nSpecial [extension](vscode) for [VSCode][]\nwas created to import `win-ca`\nin context of VSCode's Extension Host.\n\nSince all VSCode extensions share the same process,\nroot certificates imported by one of them\nare immediately available to others.\nThis can allow VSCode to connect to\n(properly configured)\nintranet sites from Windows machines.\n\n## Building\n\n- npm install\n- npm run pretest\n- npm run [nvm$][]\n- npm publish\n\nThis builds both `x86` and `x64` versions with [N-API][] support.\nFor older Node.js versions standalone binary utility is built.\n\n## See also\n\n- [OpenSSL::Win::Root][] for Ruby version\n- [mac-ca][] for Mac OS version\n\n## Credits\n\nUses [node-forge][]\nand used to use [node-ffi-napi][] (ancestor of [node-ffi][]).\n\n[node-ffi]: https://github.com/node-ffi/node-ffi\n[node-ffi-napi]: https://github.com/node-ffi-napi/node-ffi-napi\n[node-forge]: https://github.com/digitalbazaar/forge\n[OpenSSL::Win::Root]: https://github.com/ukoloff/openssl-win-root\n[Node.js]: http://nodejs.org/\n[Buffer]: https://nodejs.org/api/buffer.html\n[Ruby]: https://www.ruby-lang.org/\n[node.pem]: https://github.com/nodejs/node/blob/master/src/node_root_certs.h\n[node/4175]: https://github.com/nodejs/node/issues/4175\n[OpenSSL]: https://www.openssl.org/\n[nvm$]: https://github.com/ukoloff/nvms\n[N-API]: https://nodejs.org/api/n-api.html\n[N-API-support]: https://github.com/nodejs/node-addon-api/blob/master/index.js#L17\n[VSCode]: https://code.visualstudio.com/\n[mac-ca]: https://github.com/jfromaniello/mac-ca\n[Electron]: https://electronjs.org/\n","readmeFilename":"README.md","gitHead":"fb9f20914e5992203adb32f5ead49738109d3c3b","_id":"win-ca@2.3.0-beta","_npmVersion":"6.4.1","_nodeVersion":"10.13.0","_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"dist":{"integrity":"sha512-LttOHpdw3IHBakNDZDYdbDTT8cI8ZWgToELQRnVuJ7f+lhf+ag5D30Spc9v1VHLeCtfMCciEg+3RJf2Uxc9YVQ==","shasum":"cf9dcbf027c295ac00ee19e0b2f48844ae6bd381","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-2.3.0-beta.tgz","fileCount":19,"unpackedSize":203612,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcAml1CRA9TVsSAnZWagAAFYoP/jgB7FvhTeTeFUzt9fsV\nxRD6AA8n1yOHR5ohObRfrBVZNzkJ0KLpRg7pOM1k4MZBCj/ESAoxz9bez74J\nU9xl57DP52NTbeldklHJ+riIMF0z42WALc+TaSzr5WapER+HwH+jNnMlUyWc\nebS/JZWouDpccDUS4iJCFpjjjYHTOm0+4aq53QHYELzPZRePMN0EuRhvuRM5\nz8e5rIkB6cenugxuKAsQZtX1mvQMtfqR177WLClDWFqFCidR6d9RuGGzIy1w\n+PhwgZ8vew7xQWCxNeoNJQ28lGRXvlKxEHD9S7fHTxMo2QYZnM5uO94zQWZP\nC1hQPKc9r2MfTOR+YCVob31T5zt4kAbpiNwUIoYrRdDbML1AWcZ/tnlZl1jN\nvTWV86snt6nI4PZto1K51bum0G6FlV1Vq8l4RL3SKg6lrPjzgrNCJ/68chgx\nS5f50ORe7A4Cgx3FGQ02vLciwgLRWUmJPjs8NKlBlCpd9dCVDQf3gdpMo7mC\nR9Z36bL0hWQU0C7+3BjODEs8J61jjQNePPq5BebZdHA9bVTirW+coKx0wTbL\n3WwfbCaiPDlPOpE65lJ/2YtmjaWTCUunou5RmK2p4Sz5Nmll/D/hJO5rjJIT\ncfDe+6D+pqN/7XMF3w56y6J7DBs1y5vI0fCdMk4b/P9w6NQSiWLDtQ9r6VWj\nxBpd\r\n=Oz9z\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHqkQWfGfZfSPpkgnPSGLm4h21/nvmf84SQWRHMpT7zKAiEAgoEqZVtFaohWDgbJlZfDReTunahD+Nq0YAhepI72fnw="}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_2.3.0-beta_1543661940819_0.04258967423949067"},"_hasShrinkwrap":false},"2.3.1-beta":{"name":"win-ca","version":"2.3.1-beta","description":"Get Windows System Root certificates","main":"lib","scripts":{"nvm$":"n-api\\nvm$deploy","pretest":"coffee build","postinstall":"node -e \"try{require('.')}catch(e){}\"","test":"coffee test"},"repository":{"type":"git","url":"git+https://ukoloff@github.com/ukoloff/win-ca.git"},"keywords":["n-api","ssl","tls","ca","root","windows","vscode","electron"],"author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"license":"ISC","bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"homepage":"https://github.com/ukoloff/win-ca","dependencies":{"is-electron":"^2.2.0","make-dir":"^1.3.0","node-forge":"^0.7.5","split":"^1.0.1"},"devDependencies":{"bindings":"^1.3.0","coffee-script":"^1.12.2","node-addon-api":"^1.3.0"},"readme":"# win-ca\n\n[![Build status](https://ci.appveyor.com/api/projects/status/e6xhpp9d7aml95j2?svg=true)](https://ci.appveyor.com/project/ukoloff/win-ca)\n[![NPM version](https://badge.fury.io/js/win-ca.svg)](http://badge.fury.io/js/win-ca)\n\nGet Windows System Root certificates for [Node.js][].\n\n## Rationale\n\nUnlike [Ruby][], [Node.js][] on Windows **allows**\nHTTPS requests out-of-box.\nBut it is implemented in a rather bizzare way:\n\n> Node uses a\n> [statically compiled, manually updated, hardcoded list][node.pem]\n> of certificate authorities,\n> rather than relying on the system's trust store...\n> [Read more][node/4175]\n\nIt's very strange behavour under any OS,\nbut Windows differs from most of them\nby having its own trust store,\nfully incompatible with [OpenSSL].\n\nThis package is intended to\nfetch Root CAs from Windows' store\n(*Trusted Root Certification Authorities*)\nand make them available to\n[Node.js] application with minimal efforts.\n\n### Advantages\n\n- No internet access is required at all\n- Windows store is updated automatically (in most modern environments)\n- Manually installed Root certificates are used\n- Enterpise trusted certificates (GPO etc.) are made available too\n\n## Usage\n\nJust say `npm install --save win-ca`\nand then call `require('win-ca')`.\n\nIt is safe to use it under other OSes (not M$ Windows).\n\n## API\n\nAfter `require('win-ca')` Windows' Root CAs\nare found, deduplicated\nand installed to `https.globalAgent.options.ca`\nso they are automatically used for all\nrequests with Node.js' https module.\n\nFor use in other places, these certificates\nare also available via `.all()` method\n(in [node-forge][]'s format).\n\n```js\nlet ca = require('win-ca')\nlet forge = require('node-forge')\n\nfor (let crt of ca.all())\n  console.log(forge.pki.certificateToPem(crt))\n```\nUnfortunately, `node-forge` at the time of writing is unable to\nparse non-RSA certificates\n(namely, ECC certificates becoming more popular).\nIf your *Trusted Root Certification Authorities* store\ncontains modern certificates,\n`.all()` method will throw exception.\n\nTo fix this, one can pass `format` parameter to `.all` method:\n```js\nlet ca = require('win-ca')\n\nfor (let crt of ca.all(ca.der2.pem))\n  console.log(crt)\n```\nAvailable values for `format` are:\n\n| Constant | Value | Meaning\n|---|---:|---\nder2.der | 0 | DER-format (binary, Node's [Buffer][])\n|der2.pem | 1 | PEM-format (text, Base64-encoded)\n|der2.txt| 2 | PEM-format plus some info as text\n|der2.asn1| 3 | ASN.1-parsed certificate\n| * | * | Certificate in `node-forge` format (RSA only)\n\nOne can enumerate Root CAs himself using `.each()` method:\n\n```js\nlet ca = require('win-ca')\n\nca.each(crt=>\n  console.log(forge.pki.certificateToPem(crt)))\n```\n\nBut this list may contain duplicates.\n\nAsynchronous enumeration is provided via `.async()` method:\n\n```js\nlet ca = require('win-ca')\n\nca.each.async((error, crt)=> {\n  if (error) throw error;\n  if(crt)\n    console.log(forge.pki.certificateToPem(crt))\n  else\n    console.log(\"That's all folks!\")\n})\n```\n\nBoth `.each` and `.each.async` methods\naccept `format` as the first parameter.\n\nFinally, `win-ca` saves fetched ceritificates to disk\nfor use by other software.\nPath to folder containing all the certificates\nis available as `require('win-ca').path`.\nEnvironment variable `SSL_CERT_DIR`\nis set to point at it,\nso [OpenSSL][]-based software will use it automatically.\nThe layout of that folder mimics\nthat of [OpenSSL][]'s `c_rehash` utility.\n\nIn addition, file `roots.pem` is placed\nin the said folder.\nIt contains all root certificates in PEM format\nconcatenated together.\nIt can also be used by most cryptographic software.\nIn particular, `OpenSSL` will take it into account if one say\n```cmd\nset SSL_CERT_FILE = %SSL_CERT_DIR%\\roots.pem\n```\n\n## Availability\n\nCurrent version uses [N-API][],\nso it can be used in [Node.js versions with N-API support][N-API-support],\ni.e. v6 and all versions starting from v8.\n\nThanks to N-API, it is possible to precompile\nWindows DLL and save it to package,\nso no compilation is needed at installation time.\n\nFor other Node.js versions\n(v4, 5 or 7)\nspeciall fallback utility is called\nin the background to fetch the list anyway.\n\n## Electron\n\n[Electron][] uses its own N-API,\nso if it is detected,\nthe same fallback is used\nas for old Node.js.\n\n## VSCode extension\n\nSpecial [extension](vscode) for [VSCode][]\nwas created to import `win-ca`\nin context of VSCode's Extension Host.\n\nSince all VSCode extensions share the same process,\nroot certificates imported by one of them\nare immediately available to others.\nThis can allow VSCode to connect to\n(properly configured)\nintranet sites from Windows machines.\n\n## Building\n\n- npm install\n- npm run pretest\n- npm run [nvm$][]\n- npm publish\n\nThis builds both `x86` and `x64` versions with [N-API][] support.\nFor older Node.js versions standalone binary utility is built.\n\n## See also\n\n- [OpenSSL::Win::Root][] for Ruby version\n- [mac-ca][] for Mac OS version\n\n## Credits\n\nUses [node-forge][]\nand used to use [node-ffi-napi][] (ancestor of [node-ffi][]).\n\n[node-ffi]: https://github.com/node-ffi/node-ffi\n[node-ffi-napi]: https://github.com/node-ffi-napi/node-ffi-napi\n[node-forge]: https://github.com/digitalbazaar/forge\n[OpenSSL::Win::Root]: https://github.com/ukoloff/openssl-win-root\n[Node.js]: http://nodejs.org/\n[Buffer]: https://nodejs.org/api/buffer.html\n[Ruby]: https://www.ruby-lang.org/\n[node.pem]: https://github.com/nodejs/node/blob/master/src/node_root_certs.h\n[node/4175]: https://github.com/nodejs/node/issues/4175\n[OpenSSL]: https://www.openssl.org/\n[nvm$]: https://github.com/ukoloff/nvms\n[N-API]: https://nodejs.org/api/n-api.html\n[N-API-support]: https://github.com/nodejs/node-addon-api/blob/master/index.js#L17\n[VSCode]: https://code.visualstudio.com/\n[mac-ca]: https://github.com/jfromaniello/mac-ca\n[Electron]: https://electronjs.org/\n","readmeFilename":"README.md","gitHead":"c14999b05dbc8947a92971298b89ef5d0c41e975","_id":"win-ca@2.3.1-beta","_npmVersion":"6.4.1","_nodeVersion":"10.13.0","_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"dist":{"integrity":"sha512-r58m+CHMePcgNUX+rpOrqYiIwBHyhdJA+ns5sFykugAYVCtXJPA+zC0DGctLdGE2swGFq5NWI3Wp/+e2e4jF+Q==","shasum":"03486f6b25fc752e517eec168f4fbc8dd883a219","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-2.3.1-beta.tgz","fileCount":19,"unpackedSize":203617,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcAmwpCRA9TVsSAnZWagAAdjMP/37cxekjsO9m0rKScIDG\nogz4sIrmVL0NOxQnvWqma9LggLG8sLdlT59eXyrJU5kCy7yPexPSZrjGDQl6\nFGAFa0JzodFI86CnvJVYOFJowwzp59h88EUp2mZHRj2UTUJfe04LcOanx474\nHH0s/6uuCyaosQaUKdiM1Rcqj6u7UcMl+IEXJp8Xjrz+/C1Tv2dxP5mEE42r\nFvAUUkYqUcKEZIkUVQT86KX0yc9Sno1yI/Dda36msj35rCE6oZ/w/4rLu0Oy\nbblTh6v9JwAw3b3gSicRdnOFSHuuN8dbdchOugdKow1nb4aUwdxNXYgDf8UH\nLyTaytO/zHTU9uBKjuHDoCzl/ZU/Sf0Fn031negRcaBd/PmxKSRsI7wpwBvn\nY6EcMHIl6A4af8YSgzCg6zbZFftVnsynNJa8DCeJOD3zhSN4kRpTxR6dH64a\nwqlBGd7LywtZ6JcoxAWJ/81Rr0uXkSi3qIiynE1QnfnznigOf8AP396nMtl8\nDUU596NYgjopOY/4hbtvb6gtx30q9s9UhN42T7M5BGOflOwW97Epu5Z0k0Y0\ne6nY8FIpy+Y1sCDQhMBDZebf4klmvuV3V8NvHQ29S2pg98YLHzIGD7nOafAt\nGW2MRejno6cT/S4Ffsa2p+coRxX/qMmzrbrhigH2Wqyr5z8dvgHj9ngCaE8b\n23A/\r\n=XDgd\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCAvHM0H4X8FQTxhGoeJ/Q1+6hyD6+K+25PjlFovqhpwwIhAPDXhZRXny0MnDBz/AhdXKPu6gaT4NX3MsNho5Z9GTxi"}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_2.3.1-beta_1543662633108_0.49898560693960725"},"_hasShrinkwrap":false},"2.3.0":{"name":"win-ca","version":"2.3.0","description":"Get Windows System Root certificates","main":"lib","scripts":{"nvm$":"n-api\\nvm$deploy","pretest":"coffee build","postinstall":"node -e \"try{require('.')}catch(e){}\"","test":"coffee test"},"repository":{"type":"git","url":"git+https://ukoloff@github.com/ukoloff/win-ca.git"},"keywords":["n-api","ssl","tls","ca","root","windows","vscode","electron"],"author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"license":"ISC","bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"homepage":"https://github.com/ukoloff/win-ca","dependencies":{"is-electron":"^2.2.0","make-dir":"^1.3.0","node-forge":"^0.7.5","split":"^1.0.1"},"devDependencies":{"bindings":"^1.3.0","coffee-script":"^1.12.2","node-addon-api":"^1.3.0"},"gitHead":"83e0f2d4934e19d3571fafacc132583ea6aba384","_id":"win-ca@2.3.0","_npmVersion":"6.4.1","_nodeVersion":"10.13.0","_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"dist":{"integrity":"sha512-wYIFGIUGKdlYgFdBNDS0AA0nskrYC1sXm+RXK8Tce0VFUK1O3B1TLp6V/s891z0fF1RWHmq7Esy3+YEyGVqo5w==","shasum":"c239ff34d931ac78ce933ced1f270b96a950d56b","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-2.3.0.tgz","fileCount":19,"unpackedSize":204013,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcD0BkCRA9TVsSAnZWagAA1SIP/0olPmLuDW34edtfotWq\n7LRyCJVJFCiAn3PcGnaVei5oHpaM6uKmR+yUByv7j7mMZVsyef56VQzsCbZN\nqpOP9/j6POFgYaeZDvlsTy2WIYP56v4Rqdgp2I2B6sALPV9wmyRz9SLvOOVc\nEQCXc4FaM2JovvPhdMC6sr/CY0zsUad2Pr9EH5+79jUAKlMDCAfjSY4ALPIM\nh6gYvoz8NYlwQSvyij225a4LUhr8evjKui0MUVdyKZ8/KW1o/nO2dslAvsgr\n3zehZEGuiIfadZwkj06xY2JHBPgEThNzUo86/WS7Cw1CZGWGQxhbyCY5wTnu\nCUy1PqyYxwWamYz8n6IJzLs+vdSWJo8p1SVNBqFP9+CcB1ov9xQXOVkhbuY1\nzazwWQ5R6EklCpkh+53pssXGNPVjsOIDArHo2uRD2VegCRWtiBB57Ohbc8kX\nX0hD7ggEEBHad7yq1/eR+t83nmOAcCz7F+ZfyRqUQ6H9B6clwL6ZVlDNfLEu\nqxJ6SU5yvclWNZVii7tsZEbeX8emfn0JjMh52M/bD5H1jlBda2s0IFnvu0i4\nHxgGTBgdZmiRDydfj2IFP/cU8iCmuaqSfoaaRVb/NFRCTOKp1/ir8TInAwxS\nrqJEIat/RBJNaOVvahL6FKc2kinIvkWOYRHVmyqXV41sn5RHJSJ1ZEm2b2jX\nm/oo\r\n=KUHE\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDWkg7DsBHRFcSXdczfQnbX8yj9vFBYYpU40fvhpQM9eAIgIy5c0rJ+OTwTuCppjucDIOzVmTiAM5+ZpKJmf2BhNtU="}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_2.3.0_1544503395920_0.553369327432796"},"_hasShrinkwrap":false},"2.3.1":{"name":"win-ca","version":"2.3.1","description":"Get Windows System Root certificates","main":"lib","scripts":{"nvm$":"n-api\\nvm$deploy","pretest":"coffee build","postinstall":"node -e \"try{require('.')}catch(e){}\"","test":"coffee test"},"repository":{"type":"git","url":"git+https://ukoloff@github.com/ukoloff/win-ca.git"},"keywords":["n-api","ssl","tls","ca","root","windows","vscode","electron"],"author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"license":"ISC","bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"homepage":"https://github.com/ukoloff/win-ca","dependencies":{"is-electron":"^2.2.0","make-dir":"^1.3.0","node-forge":"^0.7.5","split":"^1.0.1"},"devDependencies":{"bindings":"^1.3.0","coffee-script":"^1.12.2","node-addon-api":"^1.3.0"},"gitHead":"f6fef7d748969f5d9d046e0cd431bc3bac3dddc1","_id":"win-ca@2.3.1","_npmVersion":"5.6.0","_nodeVersion":"8.9.4","_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"dist":{"integrity":"sha512-qxOlHthhp18SF0t5VN1+VCoeY7hIgMYS5GO1qXfD1kyqetanVyyHIV/R6sjcYcbrgy6G6Tua2UnO/+0Iol69kg==","shasum":"982bb01a7c31dbf3ba31548bfa8d164afc8608b3","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-2.3.1.tgz","fileCount":20,"unpackedSize":292077,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcGeFwCRA9TVsSAnZWagAASMEP/RsWHTRLdmvmY059PnLL\nudkajc/eieslVs2s/o4xJAalaQ7t84XQ6XfJJBXnKoiZVZWomdPb9RdhfkUB\nGAanPOUjnJa+duR9PUlU6ccnwrckmVuBBdSAQMQqckVq4RU1mUGMSUekhBZ9\ntA6skssswq8Nl4fxy7IsnZbphh3AvWCIlMeHrUSW6d5ck+zbVb+LbpBQiKzh\ndN8q2+4QTWQp3L336sl5+9BmUBloK3gkAFHG2YwF/ry5YKsrdlpTtAwn7S8O\n4Om5kTT48Kl85BeBqCKVb+RxptLPCBcALd2vmUMKPUmQ/1gXEQO2a9xtmmn1\nvGSAnji5zQrudfDfdqHuK6R68NDxa1utHETH2KkOsXllQg/3sU4bZ7Y2rrh8\nckLqwR9a6c9TpEt6UA2ad2BSlMIL6pgFGY3/D9dWlSVLRkx02lFOuziP1rZu\nCaHcfG6GBo8IA6mf4FJfxj2fA4W8KmAe9qNMAN358XQKbTp53zgyRceRLry3\n2x5CG0GXULn3VDR0PEtN0HIEXj/LzhxweWTnnTSpmHdyrXF9smb2dIlO/Oze\ntmPFbUEtwV9oTx1k5aZuVnFE7++iaVs7Im5Pj2L/5riL4fmvWI7BQ1Rz7Nfk\ns60yv0FguJFiDA8PED5lkjstQOb4vJro4MZFL1lXrR71KOLBtFfztduItt0z\nnsJ6\r\n=UH8S\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDPrvDWPa9cIF/6uRU7fUcomnJz2jiHd0e3W3IPrdlmMwIhAIhwpP1mP5gvF+eMVXQvRyV0UD8IuOxrUkq1uqc5UzjS"}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_2.3.1_1545199983700_0.5221789283246503"},"_hasShrinkwrap":false},"2.4.0":{"name":"win-ca","version":"2.4.0","description":"Get Windows System Root certificates","main":"lib","scripts":{"nvm$":"n-api\\nvm$deploy","pretest":"coffee build","postinstall":"node -e \"try{require('.')}catch(e){}\"","test":"coffee test"},"repository":{"type":"git","url":"git+https://ukoloff@github.com/ukoloff/win-ca.git"},"keywords":["n-api","ssl","tls","ca","root","windows","vscode","electron"],"author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"license":"ISC","bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"homepage":"https://github.com/ukoloff/win-ca","dependencies":{"is-electron":"^2.2.0","make-dir":"^1.3.0","node-forge":"^0.7.5","split":"^1.0.1"},"devDependencies":{"bindings":"^1.3.0","coffee-script":"^1.12.2","node-addon-api":"^1.3.0"},"gitHead":"6e97d54294ff2d08f4af14b4e542083baf3478e9","_id":"win-ca@2.4.0","_npmVersion":"6.4.1","_nodeVersion":"8.14.0","_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"dist":{"integrity":"sha512-nVu+BN/128PLVugTmYKyokni2zdeJL8irrIR4ueVrziYgDl/9E2XkZfTtvw7Hf1wPUdEOkrMhnFLJD93VFGQUw==","shasum":"19a8fe34ef9620ed060fc57a661476228df93a41","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-2.4.0.tgz","fileCount":21,"unpackedSize":292247,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcQXZWCRA9TVsSAnZWagAAnzUP/1LPwJmPIFxWl0COdvJB\nffiGj9fE0Jgl2Rmr6eow74TZHLUiVGePKzwsNNahGr7LLsAPV26A/JiN2KpL\ntGFsD2mvLK8eMuhZ7Sm3BIV7D2OO4yL/By81/t79cRB6G/5H2JCoVddHQBlb\nRwycj6lw0+KmuFrVqzoQYHn+2FfTNr4GaSDJEdOsq4HrKLd5Ngv5RogE4Yho\ncG5+jo/2SHoijgVCzqGJcTqX56l7iCAh2tWdZhzX07oe1ckHeKd3goEE18yf\nsLuCX0ZoF8G8PqxjVGzis0rairfQTDH6bMdGCKpTOJryybabe+jAl3pvYb1X\nWF+jOtPFx8+0Vw+uWCJ8mRt7gBoeMdAtfjW2lIt7Tgr5jXCnyubCw4AdPJ7T\nZ+67oNncnELP6jRV2rb/bu4P730LnqB1dz6C9Kk7h53PKZ04C+GQiN+oU0On\npR10wMBJhs/rC2dFcvqKVFExqM/fCnTGNPOwO6d7xrXrSavkyw/a3bTuVCOE\nmveZBM8H8hFSs4S9ECVw6KybUopSupRFqYJdmp6JZ3/h3uZWQ+N1SUZm+jSN\nY2CLR7R4MFtuPAGp4nIjOz+r8AfOYHKySwTCxm/HpUXv3ch5dXpFhMOqJldX\nc4CSk+5TaPWJ0oNzpT+6qhTvtPeVEx85Ux6v7tGYwZRFiJi9pLy2C87uXrDE\nhr6L\r\n=EFbG\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDW9JdP1DfW4IIvzh2JQKTd5dy3gNUCO225gJFgFt4rGAiB37qtXKy8ci+8T3N5jH/NIrQBJtOI9/iEeTmonC7MJBw=="}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_2.4.0_1547794006164_0.33928127222442983"},"_hasShrinkwrap":false},"2.4.1":{"name":"win-ca","version":"2.4.1","description":"Get Windows System Root certificates","main":"lib","scripts":{"nvm$":"n-api\\nvm$deploy","pretest":"coffee build","postinstall":"node -e \"try{require('.')}catch(e){}\"","test":"coffee test"},"repository":{"type":"git","url":"git+https://ukoloff@github.com/ukoloff/win-ca.git"},"keywords":["n-api","ssl","tls","ca","root","windows","vscode","electron"],"author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"license":"ISC","bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"homepage":"https://github.com/ukoloff/win-ca","dependencies":{"is-electron":"^2.2.0","make-dir":"^1.3.0","node-forge":"^0.7.5","split":"^1.0.1"},"devDependencies":{"bindings":"^1.3.0","coffee-script":"^1.12.2","node-addon-api":"^1.3.0"},"gitHead":"00db4ad51e7c82607e78bbb66d2bba5ade3b47f9","_id":"win-ca@2.4.1","_npmVersion":"6.4.1","_nodeVersion":"10.15.1","_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"dist":{"integrity":"sha512-iuolv0hP96o8kfmSgQBzuNRfOrRGuNZViinm+NbzZ2wCDoJJEhLm2Bb/2KjaOhyo9r4NQui5XN8Q2nEzrD64Zw==","shasum":"27af01b93bb4d8c98c30429624b063a0bcdd10e6","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-2.4.1.tgz","fileCount":21,"unpackedSize":292246,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJca70sCRA9TVsSAnZWagAAS3AP/2HvGeE0J8DEdHx18B6G\npg1vSCdqSbxdSL8QJY+NpKAe3WBk1rTIHdPFcF6ivtwDLMnNzTncUpPXJFi/\n9k19dshn1wJWCHg9Dg7b55CtHQivF1PgpqpLfxVnTZBEiZEHPgAP4+GpWztS\ntYIIB1mn44kpSjBvTXustMME7GengTJby1KxLEiHLlDKyfg3r1HxAbk2vXQm\nfqENgxCj+xe6j0XCQ8R2FDlbYGv2oTezJIN375sQ5iTUMHe5zUHOAqi53UxC\nnYkm5ZlTAvr5XQ6VrW6AIgKaeBYRV7QvI8167h0IPOWvaY0AQXAmFRMJMTVJ\n+LRAP7JiAVgpG/F+GlqgMn1JyuOLc1fgz5T6hsiVYefTrGFU0Zs21KG6yIuF\npxDf2xpq+o9hc9wF9+xYFr7KwwLGTcTOKXOZBGIEiEmZ+CylzlXCTIWEBqO+\n49ZXDNIzEYUTtc7ZlxJOchYMNYpCgqSaWucfn1KvWWhk6qfk+Yl1hpRY7j+i\nnYTsou/z1APJ747upbA6k0iOEKYpWjX4TvCZb2gPf99FA910n3rouLujcQ3/\n84BU87ATpBbOmXo7RgdOLtDyQBfT//sMOwGJKNnijkow9HpOZTdQSy6o3GnM\nomrPORmpdoibBDvSoTY4Iu/0isej4J0VKRlwegrbdBiRYfRCVm9DMV0gZvdw\n7Mj7\r\n=iuoI\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDNT4Aoz89aIg0jLGPqShAudzduhntHJ8ShzaTGzTPFoAiEAi7f+eClAMeUb3FhBRTIM10Tyq70bkjed/vSNMVPLXjI="}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_2.4.1_1550564651032_0.48507486986442117"},"_hasShrinkwrap":false},"3.0.0-beta":{"name":"win-ca","version":"3.0.0-beta","description":"Get Windows System Root certificates","main":"lib","scripts":{"nvm$":"n-api\\nvm$deploy","pretest":"lsc -cbo lib src","postinstall":"node -e \"try{require('.')}catch(e){}\"","test":"mocha"},"repository":{"type":"git","url":"git+https://ukoloff@github.com/ukoloff/win-ca.git"},"keywords":["n-api","ssl","tls","ca","root","windows","vscode","electron"],"author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"license":"ISC","bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"homepage":"https://github.com/ukoloff/win-ca","dependencies":{"is-electron":"^2.2.0","make-dir":"^1.3.0","node-forge":"^0.8.2","split":"^1.0.1"},"devDependencies":{"appveyor-mocha":"^1.1.2","bindings":"^1.5.0","choma":"^1.2.1","fs-extra":"^5.0.0","livescript":"^1.6.0","mocha":"^5.2.0","node-addon-api":"^1.6.3"},"readme":"# win-ca\n\n[![Build Status](https://travis-ci.org/ukoloff/win-ca.svg)](https://travis-ci.org/ukoloff/win-ca)\n[![Build status](https://ci.appveyor.com/api/projects/status/e6xhpp9d7aml95j2?svg=true)](https://ci.appveyor.com/project/ukoloff/win-ca)\n[![NPM version](https://badge.fury.io/js/win-ca.svg)](http://badge.fury.io/js/win-ca)\n\nGet Windows System Root certificates for [Node.js][].\n\n## Rationale\n\nUnlike [Ruby][], [Node.js][] on Windows **allows**\nHTTPS requests out-of-box.\nBut it is implemented in a rather bizzare way:\n\n> Node uses a\n> [statically compiled, manually updated, hardcoded list][node.pem]\n> of certificate authorities,\n> rather than relying on the system's trust store...\n> [Read more][node/4175]\n\nIt's very strange behavour under any OS,\nbut Windows differs from most of them\nby having its own trust store,\nfully incompatible with [OpenSSL].\n\nThis package is intended to\nfetch Root CAs from Windows' store\n(*Trusted Root Certification Authorities*)\nand make them available to\n[Node.js] application with minimal efforts.\n\n### Advantages\n\n- No internet access is required at all\n- Windows store is updated automatically (in most modern environments)\n- Manually installed Root certificates are used\n- Enterpise trusted certificates (GPO etc.) are made available too\n\n## Usage\n\nFor 95% of users:\n\n1. Just say `npm install --save win-ca`\n2. Then call `require('win-ca')`.\n3. That's it!\n\nIf you need more -\nproceed to [API](#api)\nsection below.\n\nBy the way,\n`win-ca` is safe to be used\nunder other OSes (not M$ Windows).\nIt does nothing there.\n\n### Electron\n`win-ca` was adapted to run inside Electron applications\nwith no additional configuration.\n\nSee\n[Minimal Electron application using win-ca](https://github.com/ukoloff/electron-win-ca)\nfor usage example.\n\n### VS Code extension\n\nSpecial [extension](vscode) for [VS Code]\nwas created to import `win-ca`\nin context of VS Code's Extension Host.\n\nSince all VS Code extensions share the same process,\nroot certificates imported by one of them\nare immediately available to others.\nThis can allow VS Code extensions to connect to\n(properly configured)\nintranet sites from Windows machines.\n\n## API\n\nFirst versions of `win-ca`\nopened Windows' *Trusted Root Certificate Store*,\nfetched certificates,\ndeduplicated them and installed to\n`https.globalAgent.options.ca`,\nso they are automatically used for all\nrequests with Node.js' `https` module.\n\nBut sometimes one needs to\nget these certificates to\ndo something else.\nFor that case,\nfull featured API was devised.\nIt is the only function\nwith numerous parameters\nand operation modes, eg:\n\n```js\nconst ca = require('win-ca')\n\nrootCAs = []\n// Fetch all certificates in PEM format\nca({\n  format: ca.der2.pem,\n  ondata: crt => rootCAs.push(crt)\n})\n```\n\n### Entry points\n\n`win-ca` offers three ways of importing:\n\n1. Regular `require('win-ca')`\n2. Fallback `require('win-ca/fallback')`\n3. Pure API `require('win-ca/api')`\n\nThey all export the same API,\nbut differ in initialization:\n\n1. `win-ca` *does* fetch certificates from\n`Root` store,\nsaves them to disk\nand makes them available to\n`https` module with no effort.\n\n2. `win-ca/fallback` does the same,\nbut it never uses N-API\nfor fetching certificates,\nso it should work\nin all versions of Node.js\nas well as inside Electron application.\n\n3. `win-ca/api` does *nothing*,\njust exports API,\nso you decide yourself\nwhat to do.\n\n## API Parameters\n\nAPI function may be called with no parameters,\nbut that makes little sense.\nOne should pass it object with some fields, ie:\n\n- `format`\n  defines representation of certificates to fetch.\n  Available values are:\n\n  | Constant | Value | Meaning\n  |---|---:|---\n  |der2.der | 0 | DER-format (binary, Node's [Buffer][])\n  |der2.pem | 1 | PEM-format (text, Base64-encoded)\n  |der2.txt | 2 | PEM-format plus some <abbr title=\"This is SPARTA!!!\">laconic</abbr> header\n  |der2.asn1| 3 | ASN.1-parsed certificate\n  |der2.x509| 4 | Certificate in `node-forge` format (RSA only!)\n\n  Default value is `der`\n  (except [legacy API](#legacy-api)).\n\n  See [der2](#der2) function below.\n\n- `store`\n  says which Windows' store to use.\n  Default is `Root`.\n\n  Windows has a whole lot of Certificate\n  stores (eg `Root`, `CA` etc.)\n  One can list certificates from\n  any of them\n  (knowing its name)\n  or several stores at once\n  (using array for `store` parameter).\n\n  ```js\n  var list = []\n  require('win-ca/api')({store: ['root', 'ca'], ondata: list})\n  ```\n\n- `unique`\n  whether certificates list\n  should be deduplicated.\n  Default is `true`\n  (no duplicates returned).\n\n  Use `{unique: false}`\n  to see all certificates\n  in store.\n\n  Note,\n  that legacy API `each`\n  (see [below](#legacy-api))\n  runs with `{unique: false}`.\n\n- `ondata` - callback fired for each certificate found.\n\n  Every certificate will be converted to `format`\n  and passed as the first (and the only parameter).\n\n  As a syntactic sugar,\n  array can be passed instead of function,\n  it will be populated with certificates.\n\n- `onend` - callback fired (with no parameters) at the end of retrieval\n\n  Useful for asynchronous invocations,\n  but works in any case.\n\n- `fallback` - boolean flag,\n  indicating [N-API](#n-api)\n  shouldn't be used\n  even if it is available.\n\n  Default value depends on Node.js version\n  (4, 5 and 7 `{fallback: true}`;\n  modern versions `{fallback: false}`).\n  It is also `true` if Electron is detected.\n\n  Finally, if `win-ca` has been required as\n  `win-ca/fallback`,\n  default value for this flag is also\n  set to `true`.\n\n  Note, that one can force N-API by setting\n  `{fallback: false}`,\n  but if Node.js cannot proceed,\n  exception will be thrown.\n  It can be catched,\n  but nevertheless Node.js\n  will remain in unstable state,\n  so beware.\n\n- `async` - boolean flag to make retrieval process asynchronous\n  (`false` by default)\n\n  If `true` API call returns immediately,\n  certificates will be\n  fetched later and feed to `ondata` callback.\n  Finally `onend` callback will be called.\n\n- `generator` - boolean flag to emulate ES6 generator\n  (default: `false`)\n\n  If called with this flag,\n  ES6 iterator object is immediately\n  returned\n  (regular or asynchronous -\n  according to `async` flag).\n\n  ```js\n  const ca = require('win-ca/api')\n\n  // Iterate\n  for (let der of ca({generator: true})) {\n    // Process(der)\n  }\n\n  // Or thus (Node.js v>=6)\n  let list = [...ca({generator: true})]\n\n  // Or even (Node.js v>=10)\n  for await(let der of ca({generator: true, async: true})) {\n    // await Process(der)\n  }\n  ```\n\n  Note, that if callbacks are set along\n  with `generator` flag,\n  they will be *also* fired.\n\n- `inject` - how to install certificates\n  (default: `false`, ie just yield, do not install)\n\n  If set to `true`,\n  certificated fetched\n  will be also added to\n  `https.globalAgent.options.ca`\n  (in PEM format, regardless of `format` parameter),\n  so all subsequent calls\n  to `https` client methods\n  (https.request, https.get etc.)\n  will silently use them\n  *instead* of built-in ones.\n\n  If set to `'+'`,\n  new *experimental*\n  method is used instead:\n  `tls.createSecureContext()`\n  is patched and\n  fetched certificates\n  are used *in addition* to\n  built-in ones\n  (and not only for `https`,\n  but for all secure connections).\n\n  Injection mode can be later\n  changed (or disabled)\n  with [.inject()](#inject)\n  helper function.\n\n- `save` - how to save certificates to disk\n  (default: `false`, ie use *no* I/O at all)\n\n  If set to string, or array of strings,\n  they will be treated as\n  list of candidate folders to save certificates to.\n  First one that exists or can be\n  (recursively) created will be used.\n\n  If no valid folder path found,\n  saving will be silently discarded.\n\n  If `{save: true}` used,\n  predefined list of folders will be tried:\n    + `pem` folder inside `win-ca` module itself\n    + `.local/win-ca/pem` folder inside user's profile\n\n  Certificates will be stored to the folder in two formats:\n    + Each certificate as text file with special file name\n      (mimics behavour of [OpenSSL]'s `c_rehash` utility) -\n      suitable for `SSL_CERT_DIR`\n    + All certificates in single `roots.pem` file -\n      suitable for `SSL_CERT_FILE`\n\n  If `win-ca` is required not via `win-ca/api`,\n  it calls itself with `{inject: true, save: true}`\n  and additionaly sets `ca.path` field\n  and `SSL_CERT_DIR` environment variable\n  to the folder with certificates saved.\n\n- `onsave` - callback called at the end of saving\n  (if `save` is truthy).\n\n  Path to a folder is passed to callback,\n  or no parameters (`undefined`)\n  if it was impossible to save certificates to disk.\n\n## Helper functions\n\n### der2\n\nUsed for converting according to\n[format](#api-parameters) parameter.\n\n### hash\n\nGives certificate hash\n(aka X509_NAME_hash).\n\n### inject\n\nManages the way\ncertificates are\npassed to other Node.js modules.\n\n## Legacy API\n\n`win-ca` v2 had another API,\nwhich is preserved for compatibility\n(but discouraged to use).\nIt consists of three functions:\n\n* Synchronous:\n  + `.all()`\n  + `.each()`\n* Asynchronous:\n  + `.each.async()`\n\n```\nvar ca = require('win-ca')\n\ndo.something.with(ca.all(ca.der2.pem))\n```\n\nNote:\n1. All three yield\n    certificates\n    in [node-forge][]'s format\n    by default\n    (unlike [modern API](#api),\n    that returns DER\n    if unspecified by user).\n\n    Unfortunately, `node-forge` at the time of writing is unable to\n    parse non-RSA certificates\n    (namely, ECC certificates becoming more popular).\n    If your *Trusted Root Certification Authorities* store\n    contains modern certificates,\n    legacy API calls\n    will throw exception.\n    To tackle the problem -\n    pass them [format](#api-parameters)\n    as the first parameter.\n\n2. `.all()` deduplicates\n  certificates (like [regular API](#api)),\n  while both `.each` calls\n  may return duplicates\n  (`{unique: false}` applied)\n\n3. `Root` store always used\n  (no way for `store:` option)\n\n4. Both `.each` calls require callback\n    (with optional `format`)\n\n    Synchronous `.each()` gets single\n    argument - certificate\n    (in specified format)\n\n    ```js\n      var ca = require('win-ca')\n      ca.each(ca.der2.x509, crt=>\n        console.log(crt.serialNumber)\n      )\n    ```\n\n    Asynchronous `.each.async()`\n    gets two parameters:\n      + `error` (which is always `undefined` in this version)\n      + `result` - certificate in requested `format`\n        or `undefined` to signal end of retrieval\n\n    ```js\n    let ca = require('win-ca')\n\n    ca.each.async((error, crt)=> {\n      if (error) throw error;\n      if(crt)\n        console.log(forge.pki.certificateToPem(crt))\n      else\n        console.log(\"That's all folks!\")\n    })\n    ```\n\n## N-API\n\nCurrent version uses [N-API][],\nso it can be used in [Node.js versions with N-API support][N-API-support],\ni.e. v6 and all versions starting from v8.\n\nThanks to N-API, it is possible to precompile\n[Windows DLL](n-api/crypt32.cpp) and save it to package,\nso no compilation is needed at installation time.\n\nFor other Node.js versions\n(v4, 5 or 7)\nspecial [fallback utility](n-api/roots.c) is called\nin the background to fetch the list anyway.\n\nIf you wish to use this fallback engine\n(even for modern Node.js),\nyou can\n```js\nrequire('win-ca/fallback')\n```\n\n## Building\n\n- npm install\n- npm run pretest\n- npm run [nvm$][]\n- npm publish\n\nThis builds both `x86` and `x64` versions with [N-API][] support.\nFor older Node.js versions standalone binary utility is built.\n\n## See also\n\n- [OpenSSL::Win::Root][] for Ruby version\n- [mac-ca][] for Mac OS version\n\n## Credits\n\nUses [node-forge][]\nand used to use [node-ffi-napi][] (ancestor of [node-ffi][]).\n\n[node-ffi]: https://github.com/node-ffi/node-ffi\n[node-ffi-napi]: https://github.com/node-ffi-napi/node-ffi-napi\n[node-forge]: https://github.com/digitalbazaar/forge\n[OpenSSL::Win::Root]: https://github.com/ukoloff/openssl-win-root\n[Node.js]: http://nodejs.org/\n[Buffer]: https://nodejs.org/api/buffer.html\n[Ruby]: https://www.ruby-lang.org/\n[node.pem]: https://github.com/nodejs/node/blob/master/src/node_root_certs.h\n[node/4175]: https://github.com/nodejs/node/issues/4175\n[OpenSSL]: https://www.openssl.org/\n[nvm$]: https://github.com/ukoloff/nvms\n[N-API]: https://nodejs.org/api/n-api.html\n[N-API-support]: https://github.com/nodejs/node-addon-api/blob/master/index.js#L17\n[VS Code]: https://code.visualstudio.com/\n[mac-ca]: https://github.com/jfromaniello/mac-ca\n[Electron]: https://electronjs.org/\n","readmeFilename":"README.md","gitHead":"8a0dc2bf4eb9a6ab2d9c960c849652e22b302748","_id":"win-ca@3.0.0-beta","_nodeVersion":"10.15.3","_npmVersion":"6.9.0","dist":{"integrity":"sha512-deY+NDwtyEfLAFBhNtWX+Y/IsmfGUeWVi5/7djYxQR+a9Ynw63s24/S5kyyt9byhgDUKt0E53sBFVrK/zkyLcA==","shasum":"586d12ac28374658062a473e0b9028d70a55e1b8","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-3.0.0-beta.tgz","fileCount":20,"unpackedSize":313637,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcxfpVCRA9TVsSAnZWagAAYBEP/1NtFnn4mDHNRM/8S7E3\n0snyMkLTGOi33QiXFw7OPLhjFjkLuXafZ9Dnb+pk1DPyb93tOSbkAewNerXC\nCCwkk5DfLThgA4LYDJ9LG91oD4325XFFR1tT9F1ljfWOmRLfdN5GsAoXyAaD\nyp6sWhK6wi7q6k+84FQz7djOfg471VlzZsFtX0xt7jRwYTF4NxvH0q0uZ6hN\npo1XBSDe9fdpTdDl3foRu+MhBo8DSEYJe5mVInUgSjUfHPaO+C4HGvPhtrKJ\nXjmU0kBCgqvuJjTAUzj6oXEkKMFk0zc2FBOhbUXFEXt1b6MZTxfJnxfbUu0r\nnZRlvWQ7KcqFE3nj1x4pAM2LV81Pt+WjFTJWl5GZcKoO4B9Yz7ZYK0ucJa8f\nBea/oOCSpMJBen7Yg0ymrtJaKtyxRtH3/Dc5jIjMweRA7Luzb2PEDKpDi2iO\niaETafb/TW4aWTWPWp+vA9Eu85iE1uR+8LJCT27An1DFhCUZXWqsQ+YIlIcR\nQ+kTsekaT/VFY8NQcy0h+HsIhwSUGGIAYA1LWdLMMjeYiKN8FGc8+jI7ePWc\nt1bHnnf8175V+54LnO2veKoNuaO4rkku3XikFuK+hVJ6+SdD3V7FQuTjCWPa\nI9LPr31miUb2hE+WlMRo8o84jfscgt9kQDMY1jYj9xPj2WdjTCg6eCh98OyR\nLydI\r\n=+8x3\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCMhLRnv0U6p/wCdTre9lFIv9K/p0qvz2BkGTa3kJJxRAIhAKZ8A7C+2qYzWL6h6fyZZWPnbZM4/Tj0KRHw1xNlLMMx"}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_3.0.0-beta_1556478548884_0.7505690113247458"},"_hasShrinkwrap":false},"3.0.4":{"name":"win-ca","version":"3.0.4","description":"Get Windows System Root certificates","keywords":["n-api","ssl","tls","ca","root","windows","vscode","electron"],"homepage":"https://github.com/ukoloff/win-ca","license":"ISC","author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"repository":{"type":"git","url":"git+https://github.com/ukoloff/win-ca.git"},"bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"main":"lib","scripts":{"nvm$":"n-api\\nvm$deploy","pretest":"lsc -cbo lib src","postinstall":"node -e \"try{require('.')}catch(e){}\"","test":"mocha"},"dependencies":{"is-electron":"^2.2.0","make-dir":"^1.3.0","node-forge":"^0.8.2","split":"^1.0.1"},"devDependencies":{"appveyor-mocha":"^1.1.2","bindings":"^1.5.0","choma":"^1.2.1","fs-extra":"^5.0.0","livescript":"^1.6.0","mocha":"^5.2.0","node-addon-api":"^1.6.3"},"gitHead":"dbfbe8686b7b2313751c459b1c7c513e673a0f18","_id":"win-ca@3.0.4","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"dist":{"integrity":"sha512-XNeM36WazYmbOA0M3waNvkD9dIfRzKu3118Nhd4P5AIGJnAMg8nKePUXC/meyXwD8V01Ncfv52uVe0XF8Q98rA==","shasum":"611197b2f171518961698b0552b408679321c17c","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-3.0.4.tgz","fileCount":20,"unpackedSize":314769,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcx+/iCRA9TVsSAnZWagAAdWcP/iAh2rkU34aVazgY5Zyv\nzQ29EMzdC+zAETVXeB+RjR+1Gqa0wCpw6bWqOlwcm6A2evUMfoQT7Nr2K11y\nVUyRsUcIADnjY9gJX6vQ6WtYIP6fTZsyS39Jd+N4xks7TK9ytkJsaWg7i9TX\nMeEKvwMk1lBWheSdGDg1AePGtdQ9vKEowUUPkZTcrGy+Z0rTnXgepbqeYCHC\nnzws0uAJkZBnbNWLRc6/2OTWZ8O5Y86xIMTYQsAAOOUhlLW+bd9aDz7uLe42\nwLr2PLlwhNhdDVgO0mr3dij2hSqIcW1qxKV5g+F8wNsoRXYd5nNTs4JM7ZF3\na2HhSdBinzSWQINE8W158U+IOauparKYOKqIscjNim5zU2D6tUEMrlNh0y+r\nMiNZUaujptnQUrDk0LdvDBUxfX6V5Eow3Zs1x3+B2sEcldgE1knfAcdMClLm\nJhSNsswleFLnAYxbtQ7arMEtECqYMp3AWu+j/HESzW+5BSGodgQi2EX3gDcC\nuFmmoVu76+zC8oChFBv3ZEPQoqBv8uAPy1P75R62Sm3jVClrJ31pFbJMSEeP\n2t3lJ8uhzWvGV0DjYmprYofChkPsVLi2zw+9Vrgyy3laUlWDITkV7Sy15kEV\npVbDX1rW82OSEfsigZM5Ac6lYtrKK9qBFRXdqCj9kYcvmSSB9Xa44fszyWG1\n8xTf\r\n=WyKj\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHBlpGb3VbbLEa8C6ZONSyfY3xxaku8JfeNhk+tz1Qp2AiBvx2tApAFtg2xeJ0+B8W3xqvt8sFSeWmSAFFyi9N1ewQ=="}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_3.0.4_1556606945265_0.7311871415144786"},"_hasShrinkwrap":false},"3.0.5":{"name":"win-ca","version":"3.0.5","description":"Get Windows System Root certificates","keywords":["n-api","ssl","tls","ca","root","windows","vscode","electron"],"homepage":"https://github.com/ukoloff/win-ca","license":"ISC","author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"repository":{"type":"git","url":"git+https://github.com/ukoloff/win-ca.git"},"bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"main":"lib","scripts":{"nvm$":"n-api\\nvm$deploy","pretest":"lsc -cbo lib src","postinstall":"node -e \"try{require('.')}catch(e){}\"","test":"mocha"},"dependencies":{"is-electron":"^2.2.0","make-dir":"^1.3.0","node-forge":"^0.8.2","split":"^1.0.1"},"devDependencies":{"appveyor-mocha":"^1.1.2","bindings":"^1.5.0","choma":"^1.2.1","fs-extra":"^5.0.0","livescript":"^1.6.0","mocha":"^5.2.0","node-addon-api":"^1.6.3"},"gitHead":"bdc5732a35bf8f91dabc93d0498a6d216ab6be71","_id":"win-ca@3.0.5","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"dist":{"integrity":"sha512-zo2Hq5mgUk39H5oEKxHiL+r/bkX+jQwOc9x1KQknHBGDlAK2lf5azQ3mTuWrXLjnfD647R0veIGyskGgSw4pkg==","shasum":"dbb85a3ac1dd188b732575cfd4f0ec2707ab8c34","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-3.0.5.tgz","fileCount":20,"unpackedSize":315099,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc2k+NCRA9TVsSAnZWagAA/noQAKJ5qu0ab1dpCCh+UDfR\nFw6U5v+cmSMKbSJKiY8Sgh+CazCrR6w6uoJLCtupyiA030RbItOyX2e9J0cj\nhtoKGZYUzKcavYLdPREvOVZPr17DrM/voKjLoOfPIhkLA48XR/9PXTLQ34BP\ndIRrnOgZ2m4pjw3omrRRq9Km8MHvNneeOarNNj6UVODA/xcBTAgyiLc0VkEV\nfM3Dc9Fpat9HEsB+zVwcOCOCIITePmW5FCEj23Nd45wq9nY6QkNuXlZ0C5qk\noRtU7MSzTuYYHiSSos5xBG6mz8/n4pGV7XVSlNmh8WAJ49xVnaY60570B8YJ\nv/aPPKwW3KIYqhOtoNAO17OP5177HO5ip9OErsRm5suAITtz1InAr/0UHxaD\nJh3cTk/tdMtedZHOth+QPL/SReXzTRWSPMGvp7CQU84ueyAagJEiAz/Ohs+2\ngSGb9EW+9pWfqtZ78AYvK0k5FxUDGKDd4OkAOBl3SD/rptOGQKlFWQ+53fm+\n4ZmaL2JgjfZS4yEDmhOYYK3nGa3lijl8mA3ThPR+D73Wo5qlSBahLW4XiTvb\nMNo+p3ynwfLno0LYE3x9kpUKFJ227b9AIstLGrD5B8MNLU8cR1x1t810DCHe\njiLG/2PfH45W8z1cy+NhGmDlDAYmVFkN3q27ALpFjGLmAOoPMRAQ67vZK+zb\nNEuz\r\n=88Hp\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIFUuQ3d+a5KyFGSKRhHLU9EdIcb7KUEaVeECCuVm3ttCAiB+SrdGUzWw+LbtXpk9ohXYdxZqnABdLj2f08KTAYtSCg=="}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_3.0.5_1557811084907_0.7778761801530816"},"_hasShrinkwrap":false},"3.1.0":{"name":"win-ca","version":"3.1.0","description":"Get Windows System Root certificates","keywords":["n-api","ssl","tls","ca","root","windows","vscode","electron"],"homepage":"https://github.com/ukoloff/win-ca","license":"ISC","author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"repository":{"type":"git","url":"git+https://github.com/ukoloff/win-ca.git"},"bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"main":"lib","scripts":{"nvm$":"n-api\\nvm$deploy","pretest":"lsc -cbo lib src","postinstall":"node -e \"try{require('.')}catch(e){}\"","test":"mocha"},"dependencies":{"is-electron":"^2.2.0","make-dir":"^1.3.0","node-forge":"^0.8.2","split":"^1.0.1"},"devDependencies":{"appveyor-mocha":"^1.1.2","bindings":"^1.5.0","choma":"^1.2.1","fs-extra":"^5.0.0","livescript":"^1.6.0","mocha":"^5.2.0","node-addon-api":"^1.6.3"},"gitHead":"01ac88c9cef14d4d6b82858c8f147c7deb64e911","_id":"win-ca@3.1.0","_nodeVersion":"10.16.0","_npmVersion":"6.9.0","dist":{"integrity":"sha512-FvP29F2bDCc8f1Mu84f/gpeSU6nVBzG/EqYmPDPTV08WrWDtrLJp/5T9BKaii4USAaqIQjsZO3vPXk4pzpqF2w==","shasum":"787458b00ad9544f612dc64059a563cf084249fb","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-3.1.0.tgz","fileCount":20,"unpackedSize":315158,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdEy6iCRA9TVsSAnZWagAA9ecP/RnzD536WSBpbCEShAwk\nrxQVC2VXSG9qmVOV8BdQnynk4s1OMNNLYUBpETUTmB8L1PAmOufavdtnmrLP\nfPWTdf0jCj0ZKdK+gc0QCUZjSQamuw+eHhk9s/dBa8PzKSDmn/H4otS0QOkb\ngsbhpdQUJkg+1UGSFKDIGG/jOq/5NZcdEOkhD8gNLnd9fDVcZ+x1fLPqSuNQ\nfzhRKp6GabO5EsJwI80ONtFeb5C9Xt3NofWVlUZYRVkMgPuFiR6mGBFKrYRG\ne2REaUYpEQ3Xrr1Pz9G56jWQLgNk3Sg6dWvdD727wiHSmXUV7H6TGE0JRFrm\nDBn9K0y/2mAGi/ouhI2tUuZwENA2hBYc48AWQG/sfvRHGUALc8NUz2jOY2/q\nKFNddGfQFJnvZW5JKAVWOpxtIFEmBIPfTuVp+vrcYq3KrekSzFuhHBpV3Jyb\nHD0C2V9FXeaVVvFHNJgZA0DJHgVxZxVpbw2R/ZssNBAOmPWlJMbellxheaxE\nQUh1KffGe9A9jm291HXNujXH/x8gU3fRifJWsZUveAb9CWP4zBg3I6OGQMM4\nNndr8hfOtPXpQXBY2CsK/fIw03l2OzQIskh8APRNcEUdy74+0+6eprevobHm\nkCnG1mV3ufaf/lLvKlzVzNAlD09fZ0QOXfHKfl3xvFUqH3XprIf2YiHjucpi\nV8nA\r\n=P/F/\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIDzXqrEj8w45FVDGePkaADbdN1YmSVG6ydVZJwQ8IG9JAiAQDAqq6Elyd/CUNbxC6mb+BIz8aIixjEQv8bijHthlzA=="}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_3.1.0_1561538209643_0.7736316760538968"},"_hasShrinkwrap":false},"3.1.1":{"name":"win-ca","version":"3.1.1","description":"Get Windows System Root certificates","keywords":["n-api","ssl","tls","ca","root","windows","vscode","electron"],"homepage":"https://github.com/ukoloff/win-ca","license":"ISC","author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"repository":{"type":"git","url":"git+https://github.com/ukoloff/win-ca.git"},"bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"main":"lib","scripts":{"nvm$":"n-api\\nvm$deploy","pretest":"lsc -cbo lib src","postinstall":"node -e \"try{require('.')}catch(e){}\"","test":"mocha"},"dependencies":{"is-electron":"^2.2.0","make-dir":"^1.3.0","node-forge":"^0.8.2","split":"^1.0.1"},"devDependencies":{"appveyor-mocha":"^1.1.2","bindings":"^1.5.0","choma":"^1.2.1","fs-extra":"^5.0.0","livescript":"^1.6.0","mocha":"^5.2.0","node-addon-api":"^1.6.3"},"gitHead":"89c8f1ea3563490a14855bcaeca5b800ca73fdf7","_id":"win-ca@3.1.1","_nodeVersion":"12.13.0","_npmVersion":"6.12.0","dist":{"integrity":"sha512-uZj8zifF459u1apoVjXKVBBnh4NyILbC0W5asVtILwseNenc+krP44C0FWn6RXGjOHvxLKfYoIm0xl/R8wlw+g==","shasum":"5e3176166bcb806d583002491ed10600ae946e27","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-3.1.1.tgz","fileCount":21,"unpackedSize":315238,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdsDFMCRA9TVsSAnZWagAAPbsP/iGFMuiaURsndW9RlWIF\nuiThY0enQr07RIW7o0xCR/vu3xoBGjv7UEaHkRu39foEj7GK+uoYz6Dat9tQ\nsased1RpXmldZXq5RNG5BrpA4RS8J+c9XGWzMKrdqgO8Fx5Ykrjl2QNS8jqN\n2Gk3sy+itnlJkVoXyii5rIQnDU7d53I87kXmFmvm/Lf1o3qXgbHexgYFLgpV\nEYeAd15P710sEmhqnuP7ggyTpJU9B5lnn+6nsASfI2G6pFrTdNl3pb5fWDbm\nx+JI1O75raiPgOsACWYw1SidrfUj1gb32vJ73NjukoAXmd6Ev9+0qjlOWnYW\noSEx/6oZEHL3kIbIN/g4FXmaHapuojeICHyrCIofb7ogE4SYmI4PIMLaQC2W\nScwHPOLwB9B9OBRl7+da5vbxalflJvk6gz8jpGXBqw4Y+eXZbf6cX+zZXvBG\nk7pNbLPjc8OnUJn++ix3rvucQ3FdPVupeBkEwC0wOJHu0kF30sxMKzl2NRiq\nBXVpcCXmLzOmKYCk9UJUQKms6d1KFPflqa+X6igaw1Y0OVn2HeEkXJAx0ZlG\nMm1Ba9wII200k5PVW+Ij520c6ppMSDTgIu5kWvy/TbRpeTEpcQoxT+bIDUzq\n6u/a/HRaV5vmG3MPThcr2qb6ITqJkClBtCUcmRqvL/wku1VNByIv6XJqZQ3i\nIATF\r\n=pM3/\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIBu1MZtW0uCfq4JhjcV21ZB8GwA6W2ayvNhs6f0Vl8aFAiEAzE/MFgOCg39ti6J1GvuIvN7EYrDU2URRnKa3OOGzFsk="}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_3.1.1_1571828044059_0.09969133796864726"},"_hasShrinkwrap":false},"3.2.0":{"name":"win-ca","version":"3.2.0","description":"Get Windows System Root certificates","keywords":["n-api","ssl","tls","ca","root","windows","vscode","electron"],"homepage":"https://github.com/ukoloff/win-ca","license":"ISC","author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"repository":{"type":"git","url":"git+https://github.com/ukoloff/win-ca.git"},"bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"main":"lib","scripts":{"nvm$":"n-api\\nvm$deploy","pretest":"lsc -cbo lib src","postinstall":"node -e \"try{require('.')}catch(e){}\"","test":"mocha"},"dependencies":{"is-electron":"^2.2.0","make-dir":"^1.3.0","node-forge":"^0.8.2","split":"^1.0.1"},"devDependencies":{"appveyor-mocha":"^1.1.2","bindings":"^1.5.0","choma":"^1.2.1","fs-extra":"^5.0.0","livescript":"^1.6.0","mocha":"^5.2.0","node-addon-api":"^1.6.3"},"gitHead":"006cb2248198960fd16ab3d927ec5874af675eb2","_id":"win-ca@3.2.0","_nodeVersion":"12.16.2","_npmVersion":"6.14.4","dist":{"integrity":"sha512-8o/MCSkpNTLJ1MoR2cMqxcKSEnkWonN45rEEPy+y4nGpcieL9mJ6g28K+jWDjA5DuTqNoT3/uRWQz3UO2MyeYA==","shasum":"2db083b48b6b71d82a7a74d5b5da2636d9507552","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-3.2.0.tgz","fileCount":20,"unpackedSize":316258,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeopyFCRA9TVsSAnZWagAAyNIP/j3a0bc6oSQPat4+S9IK\nbA6ATGknSJoOgC2U2M0I5WFPf18UMo9xVet5RhwkS/XyhJT9kY+3vV7bXI1g\ntQpVidCaQHQeN6NzcJ2g+SrXayoQwBxDyzJEqnK15czMYmg8xu7b7UDXKOT/\n/QngvrPGF5HCESf6eI9wXoBZ2A5eL6kBPszsLEwM1UpFo4XvC8zsh3u7nMiN\npKDfspUYEqpmWl4aNG+kiXswHvpB+gALDVkUBrlShAYaVjtU5B90hsYxIh74\n1+4LBgdmJTgj5ns92hMBWlQ2Ng0JVo2TNiXEYVLPr3oyW2jU0yyBTHu4Flwf\nB1V2dDkfb6HnlGt1dXFwsnrsWXAD0NAmvf1xiDXldSlNQiGlFfcOFtypRB8Y\nnCTdnt/Sp5781qyUQpPerneYGIx9pSysd5/ryBeoarpOnu6sMpAjc7uFzfZ+\ndabE2FwCAymU9zxOiT8vOAmIj+wtnWq2Ulr4iVG3gPEA9kt6c6nWN1HlMqha\n9F/dBxdOaWwcKLcaBLuPP1Th9oqXW/Jo/ElAxXw+agwVwH7XxJBAWfTTqRRW\nBsYutUKaozFYKQ1rKipZD4ABTiKvMEEKnmdLRwh2avXZQBMxCydFpB20B+Tp\neryQVBbMY06LurCw3qdIMPriQcosdS9gmF0DJoKW7Uj9wgm8sIabTzQwml25\n4z4T\r\n=+GcU\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDx3egjujesIxZ8Cd8F46njHrNpTUT7b3vvJNWeR7pL+wIhANRXepUQewykse0Df/dThYpRddgJLTenmjcvQUY1DD1Y"}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_3.2.0_1587715205405_0.2616130952191318"},"_hasShrinkwrap":false},"3.2.1":{"name":"win-ca","version":"3.2.1","description":"Get Windows System Root certificates","keywords":["n-api","ssl","tls","ca","root","windows","vscode","electron"],"homepage":"https://github.com/ukoloff/win-ca","license":"ISC","author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"repository":{"type":"git","url":"git+https://github.com/ukoloff/win-ca.git"},"bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"main":"lib","scripts":{"nvm$":"n-api\\nvm$deploy","pretest":"lsc -cbo lib src","postinstall":"node -e \"try{require('.')}catch(e){}\"","test":"mocha"},"dependencies":{"is-electron":"^2.2.0","make-dir":"^1.3.0","node-forge":"^0.8.2","split":"^1.0.1"},"devDependencies":{"appveyor-mocha":"^1.1.2","bindings":"^1.5.0","choma":"^1.2.1","fs-extra":"^5.0.0","livescript":"^1.6.0","mocha":"^5.2.0","node-addon-api":"^1.6.3"},"gitHead":"aad682b578afdc647932767655bbba11ce8862f3","_id":"win-ca@3.2.1","_nodeVersion":"12.16.2","_npmVersion":"6.14.4","dist":{"integrity":"sha512-EgxAx4hQMcOZshFDW1hFTv8Anpv+CVmUCKi8svVB/80V21Rbec0cPeSGinRJNZkE5/LvzKtpWZ1PHWMGeHJwBA==","shasum":"66a6055bd9687fc438fabe18a9a01e0254ee0f74","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-3.2.1.tgz","fileCount":20,"unpackedSize":316391,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe9eOCCRA9TVsSAnZWagAAyFsP/0hn2oRO2lP5rDNQxls6\nEcyg9xMt3Nlr5DoCj/pozH8enc1Aj4fGUQ2d6ndAhotpTWLPY46tF3jVw74s\npate70HgOWkJsnxUXT2PL30oAG6/h888DaEuGRDgjbRKBor7i8vpNQTeHNq6\n1rPibQShjag2+q99OdV5I8c5C27GzxUhZt24oZHg8asTb3YtsG2+KDsBI90Q\nvshFqhYYrCHT0S9Hxv+NSJrnv26oUoO0bctWMYSRMxLaehvTes26PpupGMhY\nMKOEVeAyGHxoIAuhnz8zKQVCGBX53Lbg3RQotNvaCo/14jyAyhFGWASkEHm+\nInM3HcJCF0YvQu9D/j1L2wMTNS2sTYnSax8tgCwGWeFOItsPESlzBj5vXQ/J\n+7eQwkUUM/gJo7ZzoKDanP8+2Q6Yl8FnO5y3rVAUq06ld4vYv6kEdTFMFuTs\n3L00Hn1Gi9/vAV2+0rBsZ9dj945vJfx3kl7eqP/mCCoCVvnuObUswgIyYIMU\nRkKp2YW2sRsd6eCVmUEdSpWNtf5f15PmUzTpJ5q1i4SWYnXeGZZRi28jsOnP\nQPxCttFwywvYKYTGzmNb0L7FUin+r4+BjZULLgstDyq5YbIW9vruPB/RXA8J\n805NXwYSgev7dvR78NSYVfWdI+8sinJWA78os22OihSHsH/UHj3UiZ0h+G/N\nuAu4\r\n=ASpF\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIEk1slH0mBFg3YYpwjtHQZaw+XqxgbYdhTK6QOZcfpfwAiBYK/8HmTkH8qVtNTrhvwYDlp/fbeyMPm5JBGbMaZSHGw=="}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_3.2.1_1593172866064_0.5359109260781529"},"_hasShrinkwrap":false},"3.2.2":{"name":"win-ca","version":"3.2.2","description":"Get Windows System Root certificates","keywords":["n-api","ssl","tls","ca","root","windows","vscode","electron"],"homepage":"https://github.com/ukoloff/win-ca","license":"ISC","author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"repository":{"type":"git","url":"git+https://github.com/ukoloff/win-ca.git"},"bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"main":"lib","scripts":{"nvm$":"n-api\\nvm$deploy","pretest":"lsc -cbo lib src","postinstall":"node -e \"try{require('.')}catch(e){}\"","test":"mocha"},"dependencies":{"is-electron":"^2.2.0","make-dir":"^1.3.0","node-forge":"^0.10.0","split":"^1.0.1"},"devDependencies":{"appveyor-mocha":"^1.1.2","bindings":"^1.5.0","choma":"^1.2.1","fs-extra":"^5.0.0","livescript":"^1.6.0","mocha":"^5.2.0","node-addon-api":"^1.6.3"},"gitHead":"206f5e8858ada6cba1fddc71d02950fcff686f1a","_id":"win-ca@3.2.2","_nodeVersion":"12.16.2","_npmVersion":"6.14.4","dist":{"integrity":"sha512-jJxJEl1m9+UGgzOKM9WqJsj/r6il7gqvGCK9O/D+uvOqbaYZHqZTtGaVWAAo4ewYOinVD0OrPfcw5yh6atBNwg==","shasum":"e0449912c362967a86be66ea349398f609effb9b","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-3.2.2.tgz","fileCount":20,"unpackedSize":316392,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfYHVMCRA9TVsSAnZWagAAyQMQAKLArychW+ZpQkHZkjC4\n/N828JGV2XSv4GrFd9rhQtYjJC8NstTzw4HaIpS+uyGJM77Pb5t+WDCaInmk\nmN0UlNxIjJVsdFV5RwL4yy8wbQg/bbw/Mmit8OaBlOMZTAe0nSNQpq3AdlLb\nf8A/TrJX0kPXeD555PyJq+M07fxawiPJGgn3AFAOMrjcb4cXapgBA9K/b74f\nvtULbbWRktycaSSew6YTSpLhrPvV2cOMdKVKA39uG6u4lo0eNCfu/aEJMM8S\n0ds/85vR9IWo0s+DiON3hDxbP7ReYad5/vosgvmOuOt5WZ1Le5458O1kFqqU\nDhYEYZ3HcXH0fn12bRwBBvOKNisTmRMeHqZ3cbifuCwpIeXoqpT6TLF5t9DQ\nb5ConnU1pXl0JTf9qlRr9RDQF7aPWEmDH3xITPiANcevhKqlSGFBK/dM5NET\nTeL6gGf0poRdb8aQeHX1iZoKosxveUIQXBljItq//jhAaXReQSRQBn7+ApUq\nNsv2RwbHhHxnAABh0Efe035r2PQXQEPlDjqQAEOGJQGX4sk0JjjyEvb3Okct\n+/AnpGh70uQ3E4U/qclZcXdCeunVYVk/r11Ap2kaTO5BHNSPptbCsMr2GQ6a\nTnjVAHMnh8BGJVNiWyXZ/uw1o5N79WxDXAN5S69OpIVo6b4b2Lc0REwgDhF8\nCpso\r\n=ch90\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDpGL6ZSnJZgLjspqWADEpsiLkCRy2+B7W2Snqz/pLT5gIgcedzVZITBuGqZYm4/CcgwUKo25Ubz/XwUAlrWWp3G+w="}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_3.2.2_1600157004170_0.6972155759393641"},"_hasShrinkwrap":false},"3.3.0-beta.1":{"name":"win-ca","version":"3.3.0-beta.1","description":"Get Windows System Root certificates","keywords":["n-api","ssl","tls","ca","root","windows","vscode","electron"],"homepage":"https://github.com/ukoloff/win-ca","license":"ISC","author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"repository":{"type":"git","url":"git+https://github.com/ukoloff/win-ca.git"},"bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"main":"lib","scripts":{"nvm$":"n-api\\nvm$deploy","pretest":"lsc -cbo lib src","postinstall":"node -e \"try{require('.')}catch(e){}\"","test":"mocha"},"mocha":{"extension":["ls","js"],"reporter":"dot","require":["livescript","choma","appveyor-mocha"]},"dependencies":{"is-electron":"^2.2.0","make-dir":"^1.3.0","node-forge":"^0.10.0","split":"^1.0.1"},"devDependencies":{"appveyor-mocha":"^1.1.2","bindings":"^1.5.0","choma":"^1.2.1","fs-extra":"^5.0.0","livescript":"^1.6.0","mocha":"^6.2.3","node-addon-api":"^1.6.3"},"readme":"# win-ca\n\n[![Build Status](https://travis-ci.org/ukoloff/win-ca.svg)](https://travis-ci.org/ukoloff/win-ca)\n[![Build status](https://ci.appveyor.com/api/projects/status/e6xhpp9d7aml95j2?svg=true)](https://ci.appveyor.com/project/ukoloff/win-ca)\n[![NPM version](https://badge.fury.io/js/win-ca.svg)](http://badge.fury.io/js/win-ca)\n[![Store Roots](https://github.com/ukoloff/win-ca/workflows/Store%20Roots/badge.svg)](https://github.com/ukoloff/win-ca/actions)\n\nGet Windows System Root certificates for [Node.js][].\n\n## Rationale\n\nUnlike [Ruby][], [Node.js][] on Windows **allows**\nHTTPS requests out-of-box.\nBut it is implemented in a rather bizzare way:\n\n> Node uses a\n> [statically compiled, manually updated, hardcoded list][node.pem]\n> of certificate authorities,\n> rather than relying on the system's trust store...\n> [Read more][node/4175]\n\nIt's somewhat non-intuitive under any OS,\nbut Windows differs from most of them\nby having its own trust store,\nfully incompatible with [OpenSSL].\n\nThis package is intended to\nfetch Root CAs from Windows' store\n(*Trusted Root Certification Authorities*)\nand make them available to\n[Node.js] application with minimal efforts.\n\n### Advantages\n\n- No internet access is required at all\n- Windows store is updated automatically (in most modern environments)\n- Manually installed Root certificates are used\n- Enterpise trusted certificates (GPO etc.) are made available too\n\n## Usage\n\nFor 95% of users:\n\n1. Just say `npm install --save win-ca`\n2. Then call `require('win-ca')`.\n3. That's it!\n\nIf you need more -\nproceed to [API](#api)\nsection below.\n\nBy the way,\n`win-ca` is safe to be used\nunder other OSes (not M$ Windows).\nIt does nothing there.\n\n### Electron\n`win-ca` was adapted to run inside Electron applications\nwith no additional configuration\n([asar] supported).\n\nSee\n[Minimal Electron application using win-ca][electron-win-ca]\nfor usage example.\n\n### VS Code extension\n\nSpecial [extension](vscode) for [VS Code]\nwas created to import `win-ca`\nin context of VS Code's Extension Host.\n\nSince all VS Code extensions share the same process,\nroot certificates imported by one of them\nare immediately available to others.\nThis can allow VS Code extensions to connect to\n(properly configured)\nintranet sites from Windows machines.\n\n## API\n\nFirst versions of `win-ca`\nopened Windows' *Trusted Root Certificate Store*,\nfetched certificates,\ndeduplicated them and installed to\n`https.globalAgent.options.ca`,\nso they are automatically used for all\nrequests with Node.js' `https` module.\n\nBut sometimes one needs to\nget these certificates to\ndo something else.\nFor that case,\nfull featured API was devised.\nIt is the only function\nwith numerous parameters\nand operation modes, eg:\n\n```js\nconst ca = require('win-ca')\n\nrootCAs = []\n// Fetch all certificates in PEM format\nca({\n  format: ca.der2.pem,\n  ondata: crt => rootCAs.push(crt)\n})\n```\n\n### Entry points\n\n`win-ca` offers three ways of importing:\n\n1. Regular `require('win-ca')`\n2. Fallback `require('win-ca/fallback')`\n3. Pure API `require('win-ca/api')`\n\nThey all export the same API,\nbut differ in initialization:\n\n1. `win-ca` *does* fetch certificates from\n`Root` store,\nsaves them to disk\nand makes them available to\n`https` module with no effort.\n\n2. `win-ca/fallback` does the same,\nbut it never uses [N-API](#n-api)\nfor fetching certificates,\nso it should work\nin all versions of Node.js\nas well as inside Electron application.\n\n3. `win-ca/api` does *nothing*,\njust exports API,\nso you decide yourself\nwhat to do.\n\n## API Parameters\n\nAPI function may be called with no parameters,\nbut that makes little sense.\nOne should pass it object with some fields, ie:\n\n- `format`\n  defines representation of certificates to fetch.\n  Available values are:\n\n  | Constant | Value | Meaning\n  |---|---:|---\n  |der2.der | 0 | DER-format (binary, Node's [Buffer][])\n  |der2.pem | 1 | PEM-format (text, Base64-encoded)\n  |der2.txt | 2 | PEM-format plus some <abbr title=\"This is SPARTA!!!\">laconic</abbr> header\n  |der2.asn1| 3 | ASN.1-parsed certificate\n  |der2.x509| 4 | Certificate in `node-forge` format (RSA only!)\n\n  Default value is `der`.\n\n  See also [der2](#der2) function below.\n\n- `store` -\n  which Windows' store to use.\n  Default is `Root`\n  (ie *Trusted Root Certification Authorities*).\n\n  Windows has a whole lot of Certificate\n  stores (eg `Root`, `CA`, `My`, `TrustedPublisher` etc.)\n  One can list certificates from\n  any of them\n  (knowing its name)\n  or several stores at once\n  (using array for `store` parameter).\n\n  ```js\n  var list = []\n  require('win-ca/api')({store: ['root', 'ca'], ondata: list})\n  ```\n\n- `unique`\n  whether certificates list\n  should be deduplicated.\n  Default is `true`\n  (no duplicates returned).\n\n  Use `{unique: false}`\n  to see all certificates\n  in store.\n\n- `ondata` - callback fired for each certificate found.\n\n  Every certificate will be converted to `format`\n  and passed as the first (the only) parameter.\n\n  As a syntactic sugar,\n  array can be passed instead of function,\n  it will be populated with certificates.\n\n- `onend` - callback fired (with no parameters) at the end of retrieval\n\n  Useful for asynchronous invocations,\n  but works in any case.\n\n- `fallback` - boolean flag,\n  indicating [N-API](#n-api)\n  shouldn't be used\n  even if it is available.\n\n  Default value depends on Node.js version\n  (4, 5 and 7 `{fallback: true}`;\n  modern versions `{fallback: false}`).\n  It is also `true` if Electron is detected.\n\n  Finally, if `win-ca` has been required as\n  `win-ca/fallback`,\n  default value for this flag is also\n  set to `true`.\n\n  Note, that one can force [N-API](#n-api) by setting\n  `{fallback: false}`,\n  but if Node.js cannot proceed,\n  exception will be thrown.\n  It can be catched,\n  but Node.js will nevertheless remain in unstable state,\n  so beware.\n\n- `async` - boolean flag to make retrieval process asynchronous\n  (`false` by default)\n\n  If `true`, API call returns immediately,\n  certificates will be\n  fetched later and feed to `ondata` callback.\n  Finally `onend` callback will be called.\n\n- `generator` - boolean flag to emulate ES6 generator\n  (default: `false`)\n\n  If called with this flag,\n  ES6 iterator object is immediately\n  returned\n  (regular or asynchronous -\n  according to `async` flag).\n\n  ```js\n  const ca = require('win-ca/api')\n\n  // Iterate\n  for (let der of ca({generator: true})) {\n    // Process(der)\n  }\n\n  // Or thus (Node.js v>=6)\n  let list = [...ca({generator: true})]\n\n  // Or even (Node.js v>=10)\n  for await(let der of ca({generator: true, async: true})) {\n    // await Process(der)\n  }\n  ```\n\n  Note, that if callbacks are set along\n  with `generator` flag,\n  they will be *also* fired.\n\n- `inject` - how to install certificates\n  (default: `false`, ie just fetch from store, do not install)\n\n  If set to `true`,\n  certificated fetched\n  will be also added to\n  `https.globalAgent.options.ca`\n  (in PEM format, regardless of `format` parameter),\n  so all subsequent calls\n  to `https` client methods\n  (https.request, https.get etc.)\n  will silently use them\n  *instead* of built-in ones.\n\n  If set to `'+'`,\n  new *experimental*\n  method is used instead:\n  `tls.createSecureContext()`\n  is patched and\n  fetched certificates\n  are used *in addition* to\n  built-in ones\n  (and not only for `https`,\n  but for all secure connections).\n\n  Injection mode can be later\n  changed (or disabled)\n  with [.inject()](#inject)\n  helper function.\n\n- `save` - how to save certificates to disk\n  (default: `false`, ie use *no* I/O at all)\n\n  If set to string, or array of strings,\n  they will be treated as\n  list of candidate folders to save certificates to.\n  First one that exists or can be\n  (recursively) created will be used.\n\n  If no valid folder path found,\n  saving will be silently discarded.\n\n  If `{save: true}` used,\n  predefined list of folders will be tried:\n    + `pem` folder inside `win-ca` module itself\n    + `.local/win-ca/pem` folder inside user's profile\n\n  Certificates will be stored into the folder in two formats:\n    + Each certificate as separate text file with special file name\n      (mimics behavour of [OpenSSL]'s `c_rehash` utility) -\n      suitable for `SSL_CERT_DIR`\n    + All certificates in single `roots.pem` file -\n      suitable for `SSL_CERT_FILE`\n\n  If `win-ca` is required not via `win-ca/api`,\n  it calls itself with `{inject: true, save: true}`\n  and additionaly sets `ca.path` field\n  and `SSL_CERT_DIR` environment variable\n  to the folder with certificates saved.\n\n- `onsave` - callback called at the end of saving\n  (if `save` is truthy).\n\n  Path to a folder is passed to callback,\n  or no parameters (`undefined`)\n  if it has been impossible to save certificates to disk.\n\n## Helper functions\n\nSome internal functions are exposed:\n\n### der2\n\n```js\nvar certificate = ca.der2(format, certificate_in_der_format)\n```\n\nConverts certificate from DER\nto\n[format](#api-parameters)\nspecified in first parameter.\n\nFunction `.der2()` is curried:\n\n```js\nvar toPEM = ca.der2(ca.der2.pem)\n\nvar pem = toPEM(der)\n```\n\n### hash\n```js\nvar hash = ca.hash(version, certificate_in_der_format)\n```\nGives certificate hash\n(aka X509_NAME_hash),\nie 8-character hexadecimal string,\nderived from certificate subject.\n\nIf version (first parameter) is 0,\nan old algorithm is used\n(aka X509_NAME_hash_old, used in OpenSSL v0.\\*),\nelse - the new one\n(X509_NAME_hash of OpenSSL v1.\\*).\n\nFunction `.hash()` is also curried:\n\n```js\nvar hasher = ca.hash()\nconsole.log(hasher(der))\n```\n\n### inject\n```js\nca.inject(mode)\n// or:\nca.inject(mode, array_of_certificates)\n```\n\nManages the way\ncertificates are\npassed to other modules.\n\nThis function is internally called by API\nwhen `{inject:}` parameter used.\n\nFirst argument (`mode`) is injection mode:\n\n- `false`: no injection, built-in certificates are used\n\n- `true`: put certificates to `https.globalAgent.options.ca`\n  and use them *instead* of built-in ones for `https` module\n\n- `'+'`: new *experimental* mode:\n  `tls.createSecureContext()` is patched\n  and certificates are used\n  *along with* built-in ones.\n  This mode should affect all secure connections,\n  not just `https` module.\n\nSecond parameter (`array_of_certificates`)\nis list of certificates to inject.\nIf it is omitted,\nprevious list is used\n(only inject mode is changed).\n\nFor example,\nsimplest way to test new\ninjection mode is:\n```js\nconst ca = require('win-ca') // Fetch certificates and start injecting (old way)\n\nca.inject('+') // Switch to new injection mode\n```\n\nNote,\nthat this function should be called\nbefore first secure connection is established,\nsince every secure connection populates\ndifferent caches,\nthat are extremely hard to invalidate.\nChanging injection mode in the\nmiddle of secure communication\ncan lead to unpredictable results.\n\n## Legacy API\n\n`win-ca` v2 had another API,\nwhich is preserved for compatibility,\nbut discouraged to use.\nIt consists of three functions:\n\n* Synchronous:\n  + `.all()`\n  + `.each()`\n* Asynchronous:\n  + `.each.async()`\n\n```\nvar ca = require('win-ca')\n\ndo.something.with(ca.all(ca.der2.pem))\n```\n\nNote:\n1. All three yield\n    certificates\n    in [node-forge][]'s format\n    by default\n    (unlike [modern API](#api),\n    that returns DER\n    if unspecified by user).\n\n    Unfortunately, `node-forge` at the time of writing is unable to\n    parse non-RSA certificates\n    (namely, ECC certificates becoming more popular).\n    If your *Trusted Root Certification Authorities* store\n    contains modern certificates,\n    legacy API calls\n    will throw exception.\n    To tackle the problem -\n    pass them [format](#api-parameters)\n    as the first parameter.\n\n2. `.all()` deduplicates\n  certificates (like [regular API](#api)),\n  while both `.each` calls\n  may return duplicates\n  (`{unique: false}` applied)\n\n3. `Root` store always used\n  (no way for `store:` option)\n\n4. Both `.each` calls require callback\n    (with optional `format`)\n\n    Synchronous `.each()` callback gets single\n    argument - certificate\n    (in specified format)\n\n    ```js\n      var ca = require('win-ca')\n      ca.each(ca.der2.x509, crt=>\n        console.log(crt.serialNumber)\n      )\n    ```\n\n    Asynchronous `.each.async()` callback\n    gets two parameters:\n      + `error` (which is always `undefined` in this version)\n      + `result` - certificate in requested `format`\n        or `undefined` to signal end of retrieval\n\n    ```js\n    let ca = require('win-ca')\n\n    ca.each.async((error, crt)=> {\n      if (error) throw error;\n      if(crt)\n        console.log(forge.pki.certificateToPem(crt))\n      else\n        console.log(\"That's all folks!\")\n    })\n    ```\n\n## N-API\n\nCurrent version uses [N-API],\nso it can be used in [Node.js versions with N-API support][N-API-support],\ni.e. v6 and all versions starting from v8.\n\nThanks to N-API, it is possible to precompile\n[Windows DLL](n-api/crypt32.cpp) and save it to package,\nso no compilation is needed at installation time.\n\nFor other Node.js versions\n(v4, 5 or 7)\nspecial [fallback utility](n-api/roots.c) is called\nin the background to fetch the list anyway.\n\nIf you wish to use this fallback engine\n(even for modern Node.js),\nyou can\n```js\nrequire('win-ca/fallback')\n```\n\n## Caveats\n\nWindows 10 tends to\nhave only a few certificates in\nits *Trusted Root Certification Authorities* store\nand [lazily add them to it on first use][win.lazy].\n\nIf your OS does so,\n`win-ca` will still help to\nconnect to your own sites\n(protected by self-signed certificates,\nor by the ones, distributed with GPO),\nbut will make connection to\nwell-known sites\n(like Google or Twitter) impossible!\n\nThe simplest remedy is to\n*once* open desired site in\nInternet Explorer / Google Chrome\n(certificate will be *silently* added\nto Root store).\n\nAnother option is to switch to new\n*experimental* [injection](#inject) method:\n```js\nrequire('win-ca').inject('+')\n```\n\n### Clear `pem` folder on publish\n\nIf you use `win-ca` in some Electron app or VS Code extension,\nbe warned that\n`node_modules/win-ca/pem` folder\nis likely to be packed into your bundle\nwith all root certificates on development machine.\n\nYou had better remove said folder\nbefore publishing\n(eg. in `prepack` npm script if it applies).\n\n## Building\n\n- npm install\n- npm run pretest\n- npm run [nvm$]\n- npm publish\n\nThis builds both `x86` and `x64` versions with [N-API](#n-api) support.\nFor older Node.js versions standalone binary utility is built.\n\n## See also\n\n- [OpenSSL::Win::Root][] for Ruby version\n- [mac-ca][] for Mac OS version\n\n## Credits\n\nUses [node-forge][]\nand used to use [node-ffi-napi][] (ancestor of [node-ffi][]).\n\n[node-ffi]: https://github.com/node-ffi/node-ffi\n[node-ffi-napi]: https://github.com/node-ffi-napi/node-ffi-napi\n[node-forge]: https://github.com/digitalbazaar/forge\n[OpenSSL::Win::Root]: https://github.com/ukoloff/openssl-win-root\n[Node.js]: http://nodejs.org/\n[Buffer]: https://nodejs.org/api/buffer.html\n[Ruby]: https://www.ruby-lang.org/\n[node.pem]: https://github.com/nodejs/node/blob/master/src/node_root_certs.h\n[node/4175]: https://github.com/nodejs/node/issues/4175\n[OpenSSL]: https://www.openssl.org/\n[nvm$]: https://github.com/ukoloff/nvms\n[N-API]: https://nodejs.org/api/n-api.html\n[N-API-support]: https://github.com/nodejs/node-addon-api/blob/master/index.js#L17\n[VS Code]: https://code.visualstudio.com/\n[mac-ca]: https://github.com/jfromaniello/mac-ca\n[Electron]: https://electronjs.org/\n[electron-win-ca]: https://github.com/ukoloff/electron-win-ca\n[win.lazy]: https://social.technet.microsoft.com/wiki/contents/articles/3147.pki-certificate-chaining-engine-cce.aspx\n[asar]: https://github.com/electron/asar\n","readmeFilename":"README.md","gitHead":"662225d334105f29b7df4c255a0272e07f42be22","_id":"win-ca@3.3.0-beta.1","_nodeVersion":"12.16.2","_npmVersion":"6.14.4","dist":{"integrity":"sha512-rpsJNhAdTM/ggObviK/ZxKUBQ71BLfvmW73rPSlKbvv/wQkFpqv/qG9rOyYuInVKdC6G3A8+RpOWEpLFRDRZAA==","shasum":"a5092c0fe6503a284448830f6bde2cde6851b5aa","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-3.3.0-beta.1.tgz","fileCount":20,"unpackedSize":316900,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfYNUHCRA9TVsSAnZWagAANGgP/3HFISH4h2YGvaDvh2/t\nOcsf3t7WZ7HaUrDNcG7fZ6wRIsX9v7jJ4mzFnYr8u7gxM97mBGg49s+znZWw\n8KI3u+49KAxdcSG//fzFPYx7aM+JDsGv96AnFm9xc+39e+b2AiXnmdtBo6qy\n1tfOTkp6VyMzAshv8t1vypdiwVMnMIDhXU4zMw8S3aGooxnaBHiLXLfgDj+I\nfq9n2WME/5CdHvhnh1BR1eZYd9vNDe9nL9M7f9rmc4tb0u/VtPlbS9rpzZ1G\nqKAljx/pqAsAx7C0Ma39YRrrxU1qDAb/pMq2Gni9PKWv81Ca08CNiNUwLd81\nu68DVuDIKtC3dSDbIw5CEMeAXodOKL2XuGMz+H+ZkELFPtEiFkmEOi6nP1bp\nstj46d4c9OA5FaudJaGnJK6SVDj4mK3P/FbaRVWvypXhOQRTQW0Dk9DJNPhF\n6ciS+4HjiQz3fQ/M8jdTl06Qd/DvDDsI27ksQFdv1mGEw4L1HOSTRE5Dmu9u\nrRTwT0Xsf8+nOepPMSKQROSPBLqCvRK2oCWsZs/0NehMlXCjYgIdPFxd2Uph\npdFCZUJ8VdkSV+vZ0tG/o9QYykoHcnnkcbJEpacGKnTesiyuph2KE+d5cvwZ\nWW2VMI7MlWhWFd7QV9gcoxIgOBplynnifxzKSO/86r3JbpWf5RW1//GuOqbZ\nbvKN\r\n=PcLK\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCjqTwN7TEA+Ytlj4V3U+4QNvQxE3pRyRnP07XdRQpFDAIhANIPVm3ItlAiOpHKuoN+wODB3cmIddL7vqGFU9L0Tx98"}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_3.3.0-beta.1_1600181510783_0.5649352349141494"},"_hasShrinkwrap":false},"3.3.0":{"name":"win-ca","version":"3.3.0","description":"Get Windows System Root certificates","keywords":["n-api","ssl","tls","ca","root","windows","vscode","electron"],"homepage":"https://github.com/ukoloff/win-ca","license":"ISC","author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"repository":{"type":"git","url":"git+https://github.com/ukoloff/win-ca.git"},"bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"main":"lib","scripts":{"nvm$":"n-api\\nvm$deploy","pretest":"lsc -cbo lib src","postinstall":"node -e \"try{require('.')}catch(e){}\"","test":"mocha"},"mocha":{"extension":["ls","js"],"reporter":"dot","require":["livescript","choma","appveyor-mocha"]},"dependencies":{"is-electron":"^2.2.0","make-dir":"^1.3.0","node-forge":"^0.10.0","split":"^1.0.1"},"devDependencies":{"appveyor-mocha":"^1.1.2","bindings":"^1.5.0","choma":"^1.2.1","fs-extra":"^5.0.0","livescript":"^1.6.0","mocha":"^6.2.3","node-addon-api":"^3.0.0"},"gitHead":"e7221ee8c219674419ea500c3d9425ec87ed57a3","_id":"win-ca@3.3.0","_nodeVersion":"12.16.2","_npmVersion":"6.14.4","dist":{"integrity":"sha512-9RRgvnRcs5pofqEF7O8d4uDixsiJ/ThF5lp8VLe2tpXAaE6FX+BlnzJxeAFCYVGEaDO3Bg1haAAVWvOAk2Db1A==","shasum":"b37308d3dcca46a27677addccfe765db7b0cd510","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-3.3.0.tgz","fileCount":20,"unpackedSize":317021,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfZ6hLCRA9TVsSAnZWagAAekUP/RL+2ogV5OBZm2x7ANh6\nttIn0ex3B2CBDeN4A2iiX+iOLYjfufglyyLahDbXH4/UEIs+o54ZbcDlWqkl\nBQW3cywV8xNMLqNh+3e/h0/yQhzpyTfZgpeOBNKaF6bNfxKtCvgPvUHweW6L\nkob514JskafrJC57vOmTa+zAjUdebVRXt8ajPkSOzl1IwxCOXbuJeFfAO2z8\nBUFHnD1b+N5SyBWmRNL6yjhYRc0qyvrVbmp/ovOGuVGm4oNxRz+See1oNFo8\nEowTDyZjgKknxS+JPjAEY/eh71zQzFV4MYeI9lPrVzF+qYg2g8QBfKPGXG4P\nNqFbnm4fVs1U6Z5QEaNimz3yL5uq+OaXF9y8BNcqtcSwIrIDoABSIAo76O2J\n08Gg/croeehMqJ0nlxTlRAQTLSBiAVkcpnRJ8Q3ndnuMbiV6+mjBWtgP13mG\n8zu1yElD85Wi7fpH8ks8y8zjfGbiDzz9859y1cERUtYkCngakKuXlaiISaWd\nsLkpKKOZnZs/UkxfK4qwsawN8WX37PXQFpvLe3TxuzMGwk95BJ31WdSD1YNG\ncXMNh0Jzu4muuszJ5SFZUv79gAqKW9es36L/ZgcZ5RsMzmUDhDFtncuaKCoX\nwEFNknAnTS6/wAMmFqJysPqgfW/BcZxHDELUflz3ILKPwMLt14XpPh1uE62i\nmHRi\r\n=ZPQw\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGKrEvv2xreIEA+EcMgEVxSiZkuCptWx4CPJktf1rXfGAiAzBKERhGZ92wY4eQ6abDZ6lXYbGqCiV+jwkK123Asdgw=="}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_3.3.0_1600628810747_0.1423607877936206"},"_hasShrinkwrap":false},"3.3.1":{"name":"win-ca","version":"3.3.1","description":"Get Windows System Root certificates","keywords":["n-api","ssl","tls","ca","root","windows","vscode","electron"],"homepage":"https://github.com/ukoloff/win-ca","license":"ISC","author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"repository":{"type":"git","url":"git+https://github.com/ukoloff/win-ca.git"},"bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"main":"lib","scripts":{"nvm$":"n-api\\nvm$deploy","pretest":"lsc -cbo lib src","postinstall":"node -e \"try{require('.')}catch(e){}\"","test":"mocha"},"mocha":{"extension":["ls","js"],"reporter":"dot","require":["livescript","choma","appveyor-mocha"]},"dependencies":{"is-electron":"^2.2.0","make-dir":"^1.3.0","node-forge":"^0.10.0","split":"^1.0.1"},"devDependencies":{"appveyor-mocha":"^1.1.2","bindings":"^1.5.0","choma":"^1.2.1","fs-extra":"^5.0.0","livescript":"^1.6.0","mocha":"^6.2.3","node-addon-api":"^3.0.0"},"gitHead":"5bdebaaaa9bf8fd951f587475ed3cd5fe273077e","_id":"win-ca@3.3.1","_nodeVersion":"12.19.0","_npmVersion":"6.14.8","dist":{"integrity":"sha512-oXxl9AGLVnUrpl5WEKD3pibD3Q5fhhN7Z94YzWtDkOx6wb0LB4ZvRI9NoSqw+zQMELW+gB2JUucmS+N5xenzrg==","shasum":"ac6404cf71a0bfbc268d9fdf7c6e942abea0a008","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-3.3.1.tgz","fileCount":20,"unpackedSize":328947,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfmPGGCRA9TVsSAnZWagAAzv8QAJx0h6ZDFp8sUKrBDB5H\nguqnMLMlDqIM9CKUpmVGGOWK3NbrzJXQ9UzNWqzTEW6hTuDIn10vgARPBynX\nFQaO6lfRVF8pXyHEDuACYJ1VA0pRpsJlwdjPABe0u7l11ibKS7CqgYYPbX/c\nnVxtYMyeLU1nQHNtQ1PYqBTmD8ELabowLtMPqb+TfueeOJgVfnsVHJQAC//p\nDfLnROVoPIcCQbUXr68PYU0TOOrbkNx/WfVrDS9i3hnQtqGqeDyNtIQnD/2Y\nIWx68ErvAC1d5IyEIcPBZ+r+7U64um4s3F4YnIkceY2b9mXpN2RddiABMupO\nU0hgnbA8rXyiZwP79gNo+m7t54XWSL8FlIGHTm6drxwR0718tLvH8EuRi9oG\nIILP1kwb828u7t9J6FpnegeY6zBsR6cibBKipcbs6xHgxO9J4zegOwoUFPY7\nXrBur5vXT4qCEsk90hD6jVunQk1nlQnOQTZdupTXAWt8qMl+B9L8arAXsHPe\njQHccFE9WcbNyCqm/OIoxQL/AjaIpUkKiy7nRg3ocaDtjDCQMPcFby8G/5IO\n282om2siJIqcHzxh2yYL3/4ufP+Mymd4GjLrwyfN00kgjAeHdeztCiATQ0ly\nhsYFY6H40qUPGAjag4T09rdmT0qXU25fmuZB9KA67Oj/vWH4yE/giIZFLdsJ\nUOJ+\r\n=9KGk\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCn+uSj0nUpGOk1TN8K0VFcRjg9PklEs2OVrEFID0ZQCgIgDiy/RXNsvv2dDbYeX8q0H2grVSBuLtkeg1MNtjgNmxw="}]},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_3.3.1_1603858821714_0.7464851486402748"},"_hasShrinkwrap":false},"3.3.3":{"name":"win-ca","version":"3.3.3","description":"Get Windows System Root certificates","keywords":["n-api","ssl","tls","ca","root","windows","vscode","electron"],"homepage":"https://github.com/ukoloff/win-ca","license":"MIT","author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"repository":{"type":"git","url":"git+https://github.com/ukoloff/win-ca.git"},"bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"main":"lib","scripts":{"nvm$":"n-api\\nvm$deploy","pretest":"lsc -cbo lib src","postinstall":"node -e \"try{require('.')}catch(e){}\"","test":"mocha"},"mocha":{"extension":["ls","js"],"reporter":"dot","require":["livescript","choma","appveyor-mocha"]},"dependencies":{"is-electron":"^2.2.0","make-dir":"^1.3.0","node-forge":"^0.10.0","split":"^1.0.1"},"devDependencies":{"appveyor-mocha":"^1.1.2","bindings":"^1.5.0","choma":"^1.2.1","fs-extra":"^5.0.0","livescript":"^1.6.0","mocha":"^6.2.3","node-addon-api":"^3.0.0"},"gitHead":"64dd16c5f9b298648280f98998e26fd9bb227211","_id":"win-ca@3.3.3","_nodeVersion":"12.19.0","_npmVersion":"6.14.8","dist":{"integrity":"sha512-Oiq3wtv/d2ht4sARBGxelXsQsTcZaJAvKnJow/RfHJv2q2UJNdFQHL1exCQBrmpw4ehxY8x9rIfH/R97GxrW2A==","shasum":"fefea9208721e1e09dfa236ed9a7ec2be3d9937a","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-3.3.3.tgz","fileCount":20,"unpackedSize":328496,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfoXK0CRA9TVsSAnZWagAA4aQP/3tkbbT0RTSaDloZmtsE\n/Gs91RuTzqs0tLlWglt3lFh5I+l22oMYLM2kccePyY4aSESRGU/iapL629u7\n2HmhJDikEHbK7U0YQ+GyIFrWwwvNGl0UBTKOZgF+jQkguWbEet1brPV2jjod\nIaXY5qE61qrv6i0MuIMv3uzJj2iY1VEPrsESyjc7fT09YYoswAxx/cFsx3UC\ntwpInGJNxJ9HBSmPHs9ow39yJVbWiLWL2Advuz2YFnoSJ2EEDeZEmTnfK7KE\nWXFD+AaHhoBhFgGbi7SGu3v3u/LsjrhGLwxbGwS4+Zdw+LRe45IdSwH3VE+q\nsAs9Y65wrAlnE4JJhb1YTpppjUbLjh180DC6bXxXL9F78LdMigW9qetGNMV5\nS5dnH304mGvqs9CzHDT8XXeamrL+s9oNwewfuDWW5h+fanppDZWLXcsLyIYr\nl2k0uTuqYYDbm6Trb1wag5i/+F5WdWjF1XAAVQOP7D9hiUgnoLgffFGv31Gr\nPnEPf9HOut3c6zKrOhMkvPXt+Bdpim33iXHAP0kLG4XhvWB4hWKCkUo6XeYf\nQanAF/S+u625TIj729q/muGLHamJ1v/KkyMHc/OJBoK3CFaASQn7licZDW7U\nG0PhOIm5QEbXLTS58rQI3EBfpSgbdR5Y1kMKb+Hol07xNEU8MGXWmDIwajZN\nFP31\r\n=lwff\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQCwmUrFpyNh1sya0Z48AM5zpQa+E9m2AtfP1PhFv7kAjAIgPKs9gYPMlr9XmX9x/IpB+XbuEazdDBLVWyR+81vKCPQ="}]},"_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"directories":{},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_3.3.3_1604416179696_0.11721437129461831"},"_hasShrinkwrap":false},"3.4.5":{"name":"win-ca","version":"3.4.5","description":"Get Windows System Root certificates","keywords":["n-api","ssl","tls","ca","root","windows","vscode","electron"],"homepage":"https://github.com/ukoloff/win-ca","license":"MIT","author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"repository":{"type":"git","url":"git+https://github.com/ukoloff/win-ca.git"},"bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"main":"lib","scripts":{"nvm$":"n-api\\nvm$deploy","pretest":"lsc -cbo lib src","postinstall":"node -e \"try{require('.')}catch(e){}\"","test":"mocha"},"mocha":{"extension":["ls","js"],"reporter":"dot","require":["livescript","choma","appveyor-mocha"]},"dependencies":{"is-electron":"^2.2.0","make-dir":"^1.3.0","node-forge":"^0.10.0","split":"^1.0.1"},"devDependencies":{"appveyor-mocha":"^1.1.2","bindings":"^1.5.0","choma":"^1.2.1","fs-extra":"^5.0.0","livescript":"^1.6.0","mocha":"^6.2.3","node-addon-api":"^3.0.0"},"gitHead":"add29e8ab74649627831d7cccd9fd75c833457b1","_id":"win-ca@3.4.5","_nodeVersion":"14.15.0","_npmVersion":"6.14.8","dist":{"integrity":"sha512-2xTLq3jah7Sg8Pt8me2rbTnDMxulrX6gSfU9lscyqjyE4gj34sd9w6LK0v8aNHzow+s0WEX1vve58EixZbXiLg==","shasum":"634f5603e3b1c57e273da2334cf849f6c53a61d1","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-3.4.5.tgz","fileCount":21,"unpackedSize":330231,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfs3f4CRA9TVsSAnZWagAAVL4P/jWB7QFxFVQP3wvsixsJ\nybUmzXus+SKJXqx+P6KVTNtkIEtlSkwAJpnLJ7na4pJDUxrEYPy/EVLT4XP8\ncS4tUSXuS8h8nLZcQKjtdXt1mE+gmcUhxzTdWzPkjvMnJxz8NleXi9BHWKSI\nGXTT/FzG+OQ8botKyPi3EMF1Ah9URxzu/mK8Y7VCqWIbUC4np6EqQAQwH89m\nit+349KH2sp24Zwy61vRyRcZaDXkywM1IWmJJB+fyEakiVQ6FSxuMd1EF+Hd\nhx/c2K/h95qZN1wdP5UHRfXOOxnhrb6hofJfBRvHQ/H4aIQpDsJ/D4WE25SE\nBcpFr2Dhsw6QZTym/uz2SBn0VCTjlLnE0CpDhdDdlP3rKkDwaqoiRjgJ3yKI\n+SASlXwC1kUN42ePJsttnTAl8IYbWPlFtD+yka6pJKgS1hJaeMinGc7p6Pp3\nyMlLlE5a8mDep6V3JDpnPSrnXdKlNywC4g+U7FTokmp3AYFdu5c0e6jLtw0I\nSpQ5zAPWiET5tlc622xUl/y4NblflBSYrHJhDDFPUhEcTCjJ8z5e8q/ftsNv\nZIcHIoTlHTOaZwcEdYEuleGWvjabNScLKiofintAAGlG+8oHfEigir6GsG6G\nOJx8ZCJuIvPqy5gbBxkBQDvr6r6s0Wttww+KhnY49VzFEY9BaeSPszdk47SG\nx2yE\r\n=rH5E\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQC0DbVBDak4JheXcremm0Odf3ivZUgQRhZCLWjjWk0QpgIhAIhHLKP7QxiX4S7s/yRilDwouOPSww2qnoSeICnw8WlD"}]},"_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"directories":{},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_3.4.5_1605597176149_0.2620686280156219"},"_hasShrinkwrap":false},"3.5.0":{"name":"win-ca","version":"3.5.0","description":"Get Windows System Root certificates","keywords":["n-api","ssl","tls","ca","root","windows","vscode","electron"],"homepage":"https://github.com/ukoloff/win-ca","license":"MIT","author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"repository":{"type":"git","url":"git+https://github.com/ukoloff/win-ca.git"},"bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"main":"lib","scripts":{"nvm$":"n-api\\nvm$deploy","pretest":"lsc -cbo lib src","postinstall":"node -e \"try{require('.')}catch(e){}\"","test":"mocha"},"mocha":{"extension":["ls","js"],"reporter":"dot","require":["livescript","choma","appveyor-mocha"]},"dependencies":{"is-electron":"^2.2.0","make-dir":"^1.3.0","node-forge":"^1.2.1","split":"^1.0.1"},"devDependencies":{"appveyor-mocha":"^1.1.2","bindings":"^1.5.0","choma":"^1.2.1","fs-extra":"^5.0.0","livescript":"^1.6.0","mocha":"^6.2.3","node-addon-api":"^3.0.0"},"gitHead":"38717e281f4e1301ea56891c4305b1d3523121e2","_id":"win-ca@3.5.0","_nodeVersion":"16.5.0","_npmVersion":"7.19.1","dist":{"integrity":"sha512-0TgO/+2iz2pS3OxBy2ikovPHOYyZRdLRxRTT9ze7DpZwEpaahLFOBuac93GM3lYEVzDyf8fXskJjIX/EILvkhQ==","shasum":"87fa778d629077651d323169aadf122ff16954e7","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-3.5.0.tgz","fileCount":20,"unpackedSize":329466,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiG8BAACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqHFQ//WQHiMEz3Wpqozbf6oXS+Vw1YZlYtInWQeeun/7e6o07ly2eH\r\nLeS7jqishKTjuuVy7EH6M8Oupe4r82W6UwUImmNMtYvm8agxdoRjsbjpl79X\r\nt5928UdTuz80QLLV3i6SwGOW9AzUMWT6lYQ+2pCzT4ll7SN9BMltVcgo658H\r\nDsnvQbcbwxMHq9hGZcUbeMtIvAc1s4SUkJV81VOW2O6xbg5bMpMdY3kPTwKe\r\n2F/axrcaZlwkUmpG1CSGCoY5Tabzo9OEh14IBh98cJv5ny1JhiNSWOiUGlYL\r\nE0W6Zhq2y5ERDZ8qUprG+Xrtms2RwA20W3LhBjUcYhhm1refEW/4HlX+Rb+X\r\nvIss8zYrHfBLORz8PrtE2qp4IN8FbXgssmSUjB8oIz0hfnTz01K6YrbjLAEm\r\nk+lPwkEkz/IxBvZbURI+yiZbhqdD/ku6cA0pKk6zzTxD5Hp6pjxeaKvA1Ct4\r\n395c9Y9VZ0sq9hoMuRG0oew1jp1eIHNmx6UwhMOAKvbZIvnbAMHrZAAGVXjv\r\n06n9f3kV1LZoyWNY8JqeuIkJfqZKg6OJfT7qVspXlCcNMNUOs8FHXJUIuqVf\r\nMT7cMxveS4IIOLCW19sg2doRMKeKp/hOSV8sNWU79h93mkPxbEM4j1HsBViV\r\nWQBzTWvPgCQw8CcLmoKRcIkaGG00kUSKdlk=\r\n=Gn6/\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHNc+yfz/dN399eQUPPrpqHgrz3/TKISbt7s24wUJqQ0AiEAjJMFmdKpMwMNpMD8O0v5c0YnqZP3Nqj0VdxZX+l2yrc="}]},"_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"directories":{},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_3.5.0_1645985856083_0.15795190176086016"},"_hasShrinkwrap":false},"3.5.1":{"name":"win-ca","version":"3.5.1","description":"Get Windows System Root certificates","keywords":["n-api","ssl","tls","ca","root","windows","vscode","electron"],"homepage":"https://github.com/ukoloff/win-ca","license":"MIT","author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"repository":{"type":"git","url":"git+https://github.com/ukoloff/win-ca.git"},"bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"main":"lib","scripts":{"nvm$":"n-api\\nvm$deploy","pretest":"lsc -cbo lib src","postinstall":"node -e \"try{require('.')}catch(e){}\"","test":"mocha"},"mocha":{"extension":["ls","js"],"reporter":"dot","require":["livescript","choma","appveyor-mocha"]},"dependencies":{"is-electron":"^2.2.0","make-dir":"^1.3.0","node-forge":"^1.2.1","split":"^1.0.1"},"devDependencies":{"appveyor-mocha":"^1.1.2","bindings":"^1.5.0","choma":"^1.2.1","fs-extra":"^5.0.0","livescript":"^1.6.0","mocha":"^6.2.3","node-addon-api":"^3.0.0"},"gitHead":"f197108dd1274a3e02a0fc5fe488fcea0a22cf33","_id":"win-ca@3.5.1","_nodeVersion":"18.18.1","_npmVersion":"9.1.2","dist":{"integrity":"sha512-RNy9gpBS6cxWHjfbqwBA7odaHyT+YQNhtdpJZwYCFoxB/Dq22oeOZ9YCXMwjhLytKpo7JJMnKdJ/ve7N12zzfQ==","shasum":"2ef37ac24b0a1daa2714b4c5ef258c5242429e00","tarball":"https://registry.npmjs.org/win-ca/-/win-ca-3.5.1.tgz","fileCount":20,"unpackedSize":328838,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIDlY8YgM4xqSFpcgZHaEaqvhwu7iskxrbgYoAKC5/wVKAiEA5hEOqALdW6EFkOb1qRjQSlupC/ddfRXcJDxcJuTKWGk="}]},"_npmUser":{"name":"ukoloff","email":"ukoloff@gmail.com"},"directories":{},"maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/win-ca_3.5.1_1699975708277_0.4088188023920438"},"_hasShrinkwrap":false}},"readme":"# win-ca\n\n[![Build status](https://ci.appveyor.com/api/projects/status/e6xhpp9d7aml95j2?svg=true)](https://ci.appveyor.com/project/ukoloff/win-ca)\n[![NPM version](https://badge.fury.io/js/win-ca.svg)](http://badge.fury.io/js/win-ca)\n[![Store Roots](https://github.com/ukoloff/win-ca/workflows/Store%20Roots/badge.svg)](https://github.com/ukoloff/win-ca/actions)\n\nGet Windows System Root certificates for [Node.js].\n\n## Rationale\n\nUnlike [Ruby][], [Node.js][] on Windows **allows**\nHTTPS requests out-of-box.\nBut it is implemented in a rather bizarre way:\n\n> Node uses a\n> [statically compiled, manually updated, hardcoded list][node.pem]\n> of certificate authorities,\n> rather than relying on the system's trust store...\n> [Read more][node/4175]\n\nIt's somewhat non-intuitive under any OS,\nbut Windows differs from most of them\nby having its own trust store,\nfully incompatible with [OpenSSL].\n\nThis package is intended to\nfetch Root CAs from Windows' store\n(*Trusted Root Certification Authorities*)\nand make them available to\n[Node.js] application with minimal efforts.\n\n### Advantages\n\n- No internet access is required at all\n- Windows store is updated automatically (in most modern environments)\n- Manually installed Root certificates are used\n- Enterprise trusted certificates (GPO etc.) are made available too\n\n## Usage\n\nFor 95% of users:\n\n1. Just say `npm install --save win-ca`\n2. Then call `require('win-ca')`.\n3. That's it!\n\nIf you need more -\nproceed to [API](#api)\nsection below.\n\nBy the way,\n`win-ca` is safe to be used\nunder other OSes (not M$ Windows).\nIt does nothing there.\n\n### Electron\n`win-ca` was adapted to run inside Electron applications\nwith no additional configuration\n([asar] supported).\n\nSee\n[Minimal Electron application using win-ca][electron-win-ca]\nfor usage example.\n\n### VS Code extension\n\nSpecial [extension](vscode) for [VS Code]\nwas created to import `win-ca`\nin context of VS Code's Extension Host.\n\nSince all VS Code extensions share the same process,\nroot certificates imported by one of them\nare immediately available to others.\nThis can allow VS Code extensions to connect to\n(properly configured)\nintranet sites from Windows machines.\n\n## API\n<details>\n<summary>\nClick to view...\n</summary>\n\nFirst versions of `win-ca`\nopened Windows' *Trusted Root Certificate Store*,\nfetched certificates,\ndeduplicated them and installed to\n`https.globalAgent.options.ca`,\nso they are automatically used for all\nrequests with Node.js' `https` module.\n\nBut sometimes one needs to\nget these certificates to\ndo something else.\nFor that case,\nfull featured API was devised.\nIt is the only function\nwith numerous parameters\nand operation modes, eg:\n\n```js\nconst ca = require('win-ca')\n\nrootCAs = []\n// Fetch all certificates in PEM format\nca({\n  format: ca.der2.pem,\n  ondata: crt => rootCAs.push(crt)\n})\n```\n\n### Entry points\n\n`win-ca` offers three ways of importing:\n\n1. Regular `require('win-ca')`\n2. Fallback `require('win-ca/fallback')`\n3. Pure API `require('win-ca/api')`\n\nThey all export the same API,\nbut differ in initialization:\n\n1. `win-ca` *does* fetch certificates from\n`Root` store,\nsaves them to disk\nand makes them available to\n`https` module with no effort.\n\n2. `win-ca/fallback` does the same,\nbut it never uses [N-API](#n-api)\nfor fetching certificates,\nso it should work\nin all versions of Node.js\nas well as inside Electron application.\n\n3. `win-ca/api` does *nothing*,\njust exports API,\nso you decide yourself\nwhat to do.\n\n## API Parameters\n\nAPI function may be called with no parameters,\nbut that makes little sense.\nOne should pass it object with some fields, ie:\n\n- `format`\n  defines representation of certificates to fetch.\n  Available values are:\n\n  | Constant | Value | Meaning\n  |---|---:|---\n  |der2.der | 0 | DER-format (binary, Node's [Buffer][])\n  |der2.pem | 1 | PEM-format (text, Base64-encoded)\n  |der2.txt | 2 | PEM-format plus some <abbr title=\"This is SPARTA!!!\">laconic</abbr> header\n  |der2.asn1| 3 | ASN.1-parsed certificate\n  |der2.x509| 4 | Certificate in `node-forge` format (RSA only!)\n\n  Default value is `der`.\n\n  See also [der2](#der2) function below.\n\n- `store` -\n  which Windows' store to use.\n  Default is `Root`\n  (ie *Trusted Root Certification Authorities*).\n\n  Windows has a whole lot of Certificate\n  stores (eg `Root`, `CA`, `My`, `TrustedPublisher` etc.)\n  One can list certificates from\n  any of them\n  (knowing its name)\n  or several stores at once\n  (using array for `store` parameter).\n\n  ```js\n  var list = []\n  require('win-ca/api')({store: ['root', 'ca'], ondata: list})\n  ```\n\n- `unique`\n  whether certificates list\n  should be deduplicated.\n  Default is `true`\n  (no duplicates returned).\n\n  Use `{unique: false}`\n  to see all certificates\n  in store.\n\n- `ondata` - callback fired for each certificate found.\n\n  Every certificate will be converted to `format`\n  and passed as the first (the only) parameter.\n\n  As a syntactic sugar,\n  array can be passed instead of function,\n  it will be populated with certificates.\n\n- `onend` - callback fired (with no parameters) at the end of retrieval\n\n  Useful for asynchronous invocations,\n  but works in any case.\n\n- `fallback` - boolean flag,\n  indicating [N-API](#n-api)\n  shouldn't be used\n  even if it is available.\n\n  Default value depends on Node.js version\n  (4, 5 and 7 `{fallback: true}`;\n  modern versions `{fallback: false}`).\n  It is also `true` if Electron is detected.\n\n  Finally, if `win-ca` has been required as\n  `win-ca/fallback`,\n  default value for this flag is also\n  set to `true`.\n\n  Note, that one can force [N-API](#n-api) by setting\n  `{fallback: false}`,\n  but if Node.js cannot proceed,\n  exception will be thrown.\n  It can be catched,\n  but Node.js will nevertheless remain in unstable state,\n  so beware.\n\n- `async` - boolean flag to make retrieval process asynchronous\n  (`false` by default)\n\n  If `true`, API call returns immediately,\n  certificates will be\n  fetched later and feed to `ondata` callback.\n  Finally `onend` callback will be called.\n\n- `generator` - boolean flag to emulate ES6 generator\n  (default: `false`)\n\n  If called with this flag,\n  ES6 iterator object is immediately\n  returned\n  (regular or asynchronous -\n  according to `async` flag).\n\n  ```js\n  const ca = require('win-ca/api')\n\n  // Iterate\n  for (let der of ca({generator: true})) {\n    // Process(der)\n  }\n\n  // Or thus (Node.js v>=6)\n  let list = [...ca({generator: true})]\n\n  // Or even (Node.js v>=10)\n  for await(let der of ca({generator: true, async: true})) {\n    // await Process(der)\n  }\n  ```\n\n  Note, that if callbacks are set along\n  with `generator` flag,\n  they will be *also* fired.\n\n- `inject` - how to install certificates\n  (default: `false`, ie just fetch from store, do not install)\n\n  If set to `true`,\n  certificated fetched\n  will be also added to\n  `https.globalAgent.options.ca`\n  (in PEM format, regardless of `format` parameter),\n  so all subsequent calls\n  to `https` client methods\n  (https.request, https.get etc.)\n  will silently use them\n  *instead* of built-in ones.\n\n  If set to `'+'`,\n  new *experimental*\n  method is used instead:\n  `tls.createSecureContext()`\n  is patched and\n  fetched certificates\n  are used *in addition* to\n  built-in ones\n  (and not only for `https`,\n  but for all secure connections).\n\n  Injection mode can be later\n  changed (or disabled)\n  with [.inject()](#inject)\n  helper function.\n\n- `save` - how to save certificates to disk\n  (default: `false`, ie use *no* I/O at all)\n\n  If set to string, or array of strings,\n  they will be treated as\n  list of candidate folders to save certificates to.\n  First one that exists or can be\n  (recursively) created will be used.\n\n  If no valid folder path found,\n  saving will be silently discarded.\n\n  If `{save: true}` used,\n  predefined list of folders will be tried:\n    + `pem` folder inside `win-ca` module itself\n    + `.local/win-ca/pem` folder inside user's profile\n\n  Certificates will be stored into the folder in two formats:\n    + Each certificate as separate text file with special file name\n      (mimics behavour of [OpenSSL]'s `c_rehash` utility) -\n      suitable for `SSL_CERT_DIR`\n    + All certificates in single `roots.pem` file -\n      suitable for `SSL_CERT_FILE`\n\n  If `win-ca` is required not via `win-ca/api`,\n  it calls itself with `{inject: true, save: true}`\n  and additionaly sets `ca.path` field\n  and `SSL_CERT_DIR` environment variable\n  to the folder with certificates saved.\n\n- `onsave` - callback called at the end of saving\n  (if `save` is truthy).\n\n  Path to a folder is passed to callback,\n  or no parameters (`undefined`)\n  if it has been impossible to save certificates to disk.\n\n## Helper functions\n\nSome internal functions are exposed:\n\n### der2\n\n```js\nvar certificate = ca.der2(format, certificate_in_der_format)\n```\n\nConverts certificate from DER\nto\n[format](#api-parameters)\nspecified in first parameter.\n\nFunction `.der2()` is curried:\n\n```js\nvar toPEM = ca.der2(ca.der2.pem)\n\nvar pem = toPEM(der)\n```\n\n### hash\n```js\nvar hash = ca.hash(version, certificate_in_der_format)\n```\nGives certificate hash\n(aka X509_NAME_hash),\nie 8-character hexadecimal string,\nderived from certificate subject.\n\nIf version (first parameter) is 0,\nan old algorithm is used\n(aka X509_NAME_hash_old, used in OpenSSL v0.\\*),\nelse - the new one\n(X509_NAME_hash of OpenSSL v1.\\*).\n\nFunction `.hash()` is also curried:\n\n```js\nvar hasher = ca.hash()\nconsole.log(hasher(der))\n```\n\n### inject\n```js\nca.inject(mode)\n// or:\nca.inject(mode, array_of_certificates)\n```\n\nManages the way\ncertificates are\npassed to other modules.\n\nThis function is internally called by API\nwhen `{inject:}` parameter used.\n\nFirst argument (`mode`) is injection mode:\n\n- `false`: no injection, built-in certificates are used\n\n- `true`: put certificates to `https.globalAgent.options.ca`\n  and use them *instead* of built-in ones for `https` module\n\n- `'+'`: new *experimental* mode:\n  `tls.createSecureContext()` is patched\n  and certificates are used\n  *along with* built-in ones.\n  This mode should affect all secure connections,\n  not just `https` module.\n\nSecond parameter (`array_of_certificates`)\nis list of certificates to inject.\nIf it is omitted,\nprevious list is used\n(only inject mode is changed).\n\nFor example,\nsimplest way to test new\ninjection mode is:\n```js\nconst ca = require('win-ca') // Fetch certificates and start injecting (old way)\n\nca.inject('+') // Switch to new injection mode\n```\n\nNote,\nthat this function should be called\nbefore first secure connection is established,\nsince every secure connection populates\ndifferent caches,\nthat are extremely hard to invalidate.\nChanging injection mode in the\nmiddle of secure communication\ncan lead to unpredictable results.\n\n### exe\n\nApplications that use `win-ca`\nare sometimes packed / bundled.\nIn this case one should find appropriate\nplace for binary utility `roots.exe`\n(used in fallback mode,\nwhich is always the case with Electron apps)\nand then make `win-ca` to find the binary.\n\nFunction `.exe()` is intended to provide this\nfunctionality.\nYou must call it **before** first invocation of library itself,\neg:\n```js\nvar ca = require('win-ca/api')\n\nca.exe('/full/path/to/roots.exe')\nca({fallback: true, inject: true})\n```\n\n`.exe()` with no parameters switches to\ndefault location\n(inside `lib` folder).\nIn any case it returns previous\npath to `roots.exe`:\n```\nconsole.log(require('win-ca').exe()) // Where is my root.exe?\n```\n\n## Legacy API\n<details>\n<summary>\nClick to view...\n</summary>\n\n`win-ca` v2 had another API,\nwhich is preserved for compatibility,\nbut discouraged to use.\nIt consists of three functions:\n\n* Synchronous:\n  + `.all()`\n  + `.each()`\n* Asynchronous:\n  + `.each.async()`\n\n```\nvar ca = require('win-ca')\n\ndo.something.with(ca.all(ca.der2.pem))\n```\n\nNote:\n1. All three yield\n    certificates\n    in [node-forge][]'s format\n    by default\n    (unlike [modern API](#api),\n    that returns DER\n    if unspecified by user).\n\n    Unfortunately, `node-forge` at the time of writing is unable to\n    parse non-RSA certificates\n    (namely, ECC certificates becoming more popular).\n    If your *Trusted Root Certification Authorities* store\n    contains modern certificates,\n    legacy API calls\n    will throw exception.\n    To tackle the problem -\n    pass them [format](#api-parameters)\n    as the first parameter.\n\n2. `.all()` deduplicates\n  certificates (like [regular API](#api)),\n  while both `.each` calls\n  may return duplicates\n  (`{unique: false}` applied)\n\n3. `Root` store always used\n  (no way for `store:` option)\n\n4. Both `.each` calls require callback\n    (with optional `format`)\n\n    Synchronous `.each()` callback gets single\n    argument - certificate\n    (in specified format)\n\n    ```js\n      var ca = require('win-ca')\n      ca.each(ca.der2.x509, crt=>\n        console.log(crt.serialNumber)\n      )\n    ```\n\n    Asynchronous `.each.async()` callback\n    gets two parameters:\n      + `error` (which is always `undefined` in this version)\n      + `result` - certificate in requested `format`\n        or `undefined` to signal end of retrieval\n\n    ```js\n    let ca = require('win-ca')\n\n    ca.each.async((error, crt)=> {\n      if (error) throw error;\n      if(crt)\n        console.log(forge.pki.certificateToPem(crt))\n      else\n        console.log(\"That's all folks!\")\n    })\n    ```\n\n</details>\n\n## N-API\n\nCurrent version uses [N-API],\nso it can be used in [Node.js versions with N-API support][N-API-support],\ni.e. v6 and all versions starting from v8.\n\nThanks to N-API, it is possible to precompile\n[Windows DLL](n-api/crypt32.cpp) and save it to package,\nso no compilation is needed at installation time.\n\nFor other Node.js versions\n(v4, 5 or 7)\nspecial [fallback utility](n-api/roots.c) is called\nin the background to fetch the list anyway.\n\nIf you wish to use this fallback engine\n(even for modern Node.js),\nyou can\n```js\nrequire('win-ca/fallback')\n```\n</details>\n\n## Caveats\n\nWindows 10 tends to\nhave only a few certificates in\nits *Trusted Root Certification Authorities* store\nand [lazily add them to it on first use][win.lazy].\n\nIf your OS does so,\n`win-ca` will still help to\nconnect to your own sites\n(protected by self-signed certificates,\nor by the ones, distributed with GPO),\nbut will make connection to\nwell-known sites\n(like Google or Twitter) impossible!\n\nThe simplest remedy is to\n*once* open desired site in\nInternet Explorer / Google Chrome\n(certificate will be *silently* added\nto Root store).\n\nAnother option is to switch to new\n*experimental* [injection](#inject) method:\n```js\nrequire('win-ca').inject('+')\n```\n\n### Clear `pem` folder on publish\n\nIf you use `win-ca` in some Electron app or VS Code extension,\nbe warned that\n`node_modules/win-ca/pem` folder\nis *highly likely* to be packed into your bundle\nwith all root certificates on development machine.\n\nYou had better remove said folder\nbefore publishing\n(eg. in `prepack` npm script if it applies).\n\n## Building\n\n- npm install\n- npm run pretest\n- npm run [nvm$]\n- npm publish\n\nThis builds both `x86` and `x64` versions with [N-API](#n-api) support.\nFor older Node.js versions standalone binary utility is built.\n\n## See also\n\n- [OpenSSL::Win::Root][] for Ruby version\n- [mac-ca][] for Mac OS version\n\n## Credits\n\nUses [node-forge][]\nand used to use [node-ffi-napi][] (ancestor of [node-ffi][]).\n\n[node-ffi]: https://github.com/node-ffi/node-ffi\n[node-ffi-napi]: https://github.com/node-ffi-napi/node-ffi-napi\n[node-forge]: https://github.com/digitalbazaar/forge\n[OpenSSL::Win::Root]: https://github.com/ukoloff/openssl-win-root\n[Node.js]: http://nodejs.org/\n[Buffer]: https://nodejs.org/api/buffer.html\n[Ruby]: https://www.ruby-lang.org/\n[node.pem]: https://github.com/nodejs/node/blob/master/src/node_root_certs.h\n[node/4175]: https://github.com/nodejs/node/issues/4175\n[OpenSSL]: https://www.openssl.org/\n[nvm$]: https://github.com/ukoloff/nvms\n[N-API]: https://nodejs.org/api/n-api.html\n[N-API-support]: https://github.com/nodejs/node-addon-api/blob/master/index.js#L17\n[VS Code]: https://code.visualstudio.com/\n[mac-ca]: https://github.com/jfromaniello/mac-ca\n[Electron]: https://electronjs.org/\n[electron-win-ca]: https://github.com/ukoloff/electron-win-ca\n[win.lazy]: https://social.technet.microsoft.com/wiki/contents/articles/3147.pki-certificate-chaining-engine-cce.aspx\n[asar]: https://github.com/electron/asar\n","maintainers":[{"name":"ukoloff","email":"ukoloff@gmail.com"}],"time":{"modified":"2023-11-14T15:28:28.763Z","created":"2017-01-01T08:06:56.697Z","0.1.0":"2017-01-01T08:06:56.697Z","0.1.1":"2017-01-01T09:57:06.042Z","0.2.0":"2017-01-02T06:12:47.172Z","1.0.0":"2017-01-03T06:47:25.314Z","1.1.0":"2018-06-05T08:03:47.999Z","2.0.0-rc1":"2018-06-09T07:57:43.755Z","2.0.0-rc2":"2018-06-14T11:48:43.111Z","2.0.0":"2018-06-16T07:17:09.402Z","2.1.0":"2018-06-25T10:50:11.460Z","2.1.0-electron":"2018-11-01T05:39:12.582Z","2.1.1-electron":"2018-11-01T13:24:30.075Z","2.2.0":"2018-11-01T18:26:57.329Z","2.3.0-beta":"2018-12-01T10:59:00.953Z","2.3.1-beta":"2018-12-01T11:10:33.285Z","2.3.0":"2018-12-11T04:43:16.143Z","2.3.1":"2018-12-19T06:13:03.891Z","2.4.0":"2019-01-18T06:46:46.303Z","2.4.1":"2019-02-19T08:24:11.223Z","3.0.0-beta":"2019-04-28T19:09:09.091Z","3.0.4":"2019-04-30T06:49:05.379Z","3.0.5":"2019-05-14T05:18:05.151Z","3.1.0":"2019-06-26T08:36:49.789Z","3.1.1":"2019-10-23T10:54:04.244Z","3.2.0":"2020-04-24T08:00:05.591Z","3.2.1":"2020-06-26T12:01:06.257Z","3.2.2":"2020-09-15T08:03:24.413Z","3.3.0-beta.1":"2020-09-15T14:51:50.983Z","3.3.0":"2020-09-20T19:06:50.898Z","3.3.1":"2020-10-28T04:20:21.984Z","3.3.3":"2020-11-03T15:09:39.815Z","3.4.5":"2020-11-17T07:12:56.376Z","3.5.0":"2022-02-27T18:17:36.286Z","3.5.1":"2023-11-14T15:28:28.567Z"},"homepage":"https://github.com/ukoloff/win-ca","keywords":["n-api","ssl","tls","ca","root","windows","vscode","electron"],"repository":{"type":"git","url":"git+https://github.com/ukoloff/win-ca.git"},"author":{"name":"Stas Ukolov","email":"ukoloff@gmail.com"},"bugs":{"url":"https://github.com/ukoloff/win-ca/issues"},"license":"MIT","readmeFilename":"README.md","users":{"cblumer":true}}